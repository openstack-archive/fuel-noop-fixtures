{"1": {
    "glance_glare": {
        "user_password": "mYzmLhW9hk1voCuv9ipkRBaO"
    },
    "storage_network_range": "10.109.2.0/24",
    "user_node_name": "slave-01_controller",
    "uid": "2",
    "storage": {
        "volumes_ceph": false,
        "per_pool_pg_nums": {
            "compute": 128,
            "default_pg_num": 128,
            "volumes": 128,
            "images": 128,
            "backups": 128,
            ".rgw": 128
        },
        "objects_ceph": false,
        "bootstrap_osd_key": "AQBOuftWAAAAABAA7Tl4sy2/r4Dllbo+5BPbew==",
        "volumes_lvm": true,
        "ephemeral_ceph": false,
        "volumes_block_device": false,
        "mon_key": "AQBOuftWAAAAABAA653cC4lobCr2YXF9lOPh/w==",
        "admin_key": "AQBOuftWAAAAABAAPaAElO/iDyKIwM2p4n14ZQ==",
        "osd_pool_size": "3",
        "pg_num": 128,
        "images_ceph": false,
        "metadata": {
            "group": "storage",
            "weight": 60,
            "label": "Storage Backends"
        },
        "radosgw_key": "AQBOuftWAAAAABAAiqRceQL7eqRpsrOHBmyXmQ==",
        "fsid": "8a70d51a-beef-4116-86c3-bf30dc0c8aa8",
        "images_vcenter": false
    },
    "plugins": [],
    "murano-cfapi": {
        "db_password": "4GuyD5ya1pkzDdRbD51z9Z9V",
        "user_password": "pCg8K3V6sVR09NTbVWit1iNo",
        "enabled": false,
        "rabbit_password": "QlXPfakg12RqVIZbl8CQZlrD"
    },
    "corosync": {
        "verified": false,
        "group": "226.94.1.1",
        "port": "12000",
        "metadata": {
            "restrictions": [
                {
                    "action": "hide",
                    "condition": "true"
                }
            ],
            "group": "general",
            "weight": 50,
            "label": "Corosync"
        }
    },
    "syslog": {
        "syslog_port": "514",
        "syslog_transport": "tcp",
        "syslog_server": "",
        "metadata": {
            "group": "logging",
            "enabled": false,
            "weight": 50,
            "toggleable": true,
            "label": "Syslog"
        }
    },
    "libvirt_type": "qemu",
    "puppet": {
        "modules": "rsync://10.109.0.2:/puppet/liberty-9.0/modules/",
        "manifests": "rsync://10.109.0.2:/puppet/liberty-9.0/manifests/"
    },
    "mysql": {
        "root_password": "AdnIXQytypRsqulqaR38uQbX",
        "wsrep_password": "9mG6JvFKzwRNGm7oqly8CAlj"
    },
    "fail_if_error": true,
    "use_cow_images": true,
    "glance": {
        "db_password": "qmHq3YscDyGOYxFaP0YP9oVG",
        "user_password": "NhwtVEdiYAt5HOOWasXenzLk",
        "image_cache_max_size": "9405726720"
    },
    "cinder": {
        "db_password": "9RkYPCQT9V3LerPsp0qvuzmh",
        "user_password": "n8BMurmecwUWcH52nbdxqPtz",
        "fixed_key": "f74ce7f535cb61fc0ee8ba77e35b7648fb2796c2862493085e6cfcaa4638ec08"
    },
    "cobbler": {
        "profile": "ubuntu_1404_x86_64"
    },
    "mongo": {
        "enabled": false
    },
    "quantum_settings": {
        "default_floating_net": "admin_floating_net",
        "database": {
            "passwd": "p5fcogniUc0e2P1cg8na7OSJ"
        },
        "default_private_net": "admin_internal_net",
        "keystone": {
            "admin_password": "i70OskmcslTHwCf5M7My3ubq"
        },
        "L3": {
            "use_namespaces": true
        },
        "L2": {
            "phys_nets": {
                "physnet2": {
                    "bridge": "br-prv",
                    "vlan_range": "1000:1030"
                },
                "physnet1": {
                    "bridge": "br-floating",
                    "vlan_range": null
                }
            },
            "base_mac": "fa:16:3e:00:00:00",
            "segmentation_type": "vlan"
        },
        "predefined_networks": {
            "admin_floating_net": {
                "shared": false,
                "L2": {
                    "segment_id": null,
                    "router_ext": true,
                    "physnet": "physnet1",
                    "network_type": "flat"
                },
                "L3": {
                    "nameservers": [],
                    "subnet": "10.109.3.0/24",
                    "floating": [
                        "10.109.3.128:10.109.3.254"
                    ],
                    "gateway": "10.109.3.1",
                    "enable_dhcp": false
                },
                "tenant": "neutronOneController"
            },
            "admin_internal_net": {
                "shared": false,
                "L2": {
                    "segment_id": null,
                    "router_ext": false,
                    "physnet": "physnet2",
                    "network_type": "vlan"
                },
                "L3": {
                    "nameservers": [
                        "8.8.4.4",
                        "8.8.8.8"
                    ],
                    "subnet": "10.109.4.0/24",
                    "floating": null,
                    "gateway": "10.109.4.1",
                    "enable_dhcp": true
                },
                "tenant": "neutronOneController"
            }
        },
        "metadata": {
            "metadata_proxy_shared_secret": "u6V12DZwYFSJRLUTKR7eDHoS"
        }
    },
    "network_metadata": {
        "nodes": {
            "node-3": {
                "nova_hugepages_enabled": false,
                "swift_zone": "3",
                "name": "node-3",
                "nova_cpu_pinning_enabled": false,
                "fqdn": "node-3.test.domain.local",
                "network_roles": {
                    "murano/api": "10.109.1.5",
                    "keystone/api": "10.109.1.5",
                    "neutron/api": "10.109.1.5",
                    "mgmt/database": "10.109.1.5",
                    "sahara/api": "10.109.1.5",
                    "ceilometer/api": "10.109.1.5",
                    "ceph/public": "10.109.2.3",
                    "mgmt/messaging": "10.109.1.5",
                    "management": "10.109.1.5",
                    "swift/api": "10.109.1.5",
                    "storage": "10.109.2.3",
                    "mgmt/corosync": "10.109.1.5",
                    "glance/glare": "10.109.1.5",
                    "aodh/api": "10.109.1.5",
                    "cinder/api": "10.109.1.5",
                    "swift/replication": "10.109.2.3",
                    "admin/pxe": "10.109.0.6",
                    "mongo/db": "10.109.1.5",
                    "neutron/private": null,
                    "neutron/floating": null,
                    "fw-admin": "10.109.0.6",
                    "glance/api": "10.109.1.5",
                    "mgmt/vip": "10.109.1.5",
                    "heat/api": "10.109.1.5",
                    "cinder/iscsi": "10.109.2.3",
                    "nova/api": "10.109.1.5",
                    "murano/cfapi": "10.109.1.5",
                    "horizon": "10.109.1.5",
                    "nova/migration": "10.109.1.5",
                    "mgmt/memcache": "10.109.1.5",
                    "ironic/api": "10.109.1.5",
                    "ceph/replication": "10.109.2.3"
                },
                "user_node_name": "slave-02_compute",
                "node_roles": [
                    "compute"
                ],
                "uid": "3"
            },
            "node-2": {
                "nova_hugepages_enabled": false,
                "swift_zone": "2",
                "name": "node-2",
                "nova_cpu_pinning_enabled": false,
                "fqdn": "node-2.test.domain.local",
                "network_roles": {
                    "murano/api": "10.109.1.4",
                    "keystone/api": "10.109.1.4",
                    "neutron/api": "10.109.1.4",
                    "mgmt/database": "10.109.1.4",
                    "sahara/api": "10.109.1.4",
                    "ceilometer/api": "10.109.1.4",
                    "ex": "10.109.3.4",
                    "ceph/public": "10.109.2.2",
                    "ceph/radosgw": "10.109.3.4",
                    "management": "10.109.1.4",
                    "swift/api": "10.109.1.4",
                    "storage": "10.109.2.2",
                    "mgmt/corosync": "10.109.1.4",
                    "glance/glare": "10.109.1.4",
                    "aodh/api": "10.109.1.4",
                    "cinder/api": "10.109.1.4",
                    "public/vip": "10.109.3.4",
                    "swift/replication": "10.109.2.2",
                    "mgmt/messaging": "10.109.1.4",
                    "admin/pxe": "10.109.0.3",
                    "mongo/db": "10.109.1.4",
                    "neutron/private": null,
                    "neutron/floating": null,
                    "fw-admin": "10.109.0.3",
                    "glance/api": "10.109.1.4",
                    "mgmt/vip": "10.109.1.4",
                    "heat/api": "10.109.1.4",
                    "cinder/iscsi": "10.109.2.2",
                    "nova/api": "10.109.1.4",
                    "murano/cfapi": "10.109.1.4",
                    "horizon": "10.109.1.4",
                    "nova/migration": "10.109.1.4",
                    "mgmt/memcache": "10.109.1.4",
                    "ironic/api": "10.109.1.4",
                    "ceph/replication": "10.109.2.2"
                },
                "user_node_name": "slave-01_controller",
                "node_roles": [
                    "primary-controller"
                ],
                "uid": "2"
            }
        },
        "vips": {
            "vrouter_pub": {
                "network_role": "public/vip",
                "ipaddr": "10.109.3.2",
                "is_user_defined": false,
                "vendor_specific": {
                    "iptables_rules": {
                        "ns_start": [
                            "iptables -t nat -A POSTROUTING -o <%INT%> -j MASQUERADE"
                        ],
                        "ns_stop": [
                            "iptables -t nat -D POSTROUTING -o <%INT%> -j MASQUERADE"
                        ]
                    }
                },
                "namespace": "vrouter",
                "node_roles": [
                    "controller",
                    "primary-controller"
                ]
            },
            "management": {
                "network_role": "mgmt/vip",
                "ipaddr": "10.109.1.3",
                "is_user_defined": false,
                "vendor_specific": null,
                "namespace": "haproxy",
                "node_roles": [
                    "controller",
                    "primary-controller"
                ]
            },
            "public": {
                "network_role": "public/vip",
                "ipaddr": "10.109.3.3",
                "is_user_defined": false,
                "vendor_specific": null,
                "namespace": "haproxy",
                "node_roles": [
                    "controller",
                    "primary-controller"
                ]
            },
            "vrouter": {
                "network_role": "mgmt/vip",
                "ipaddr": "10.109.1.2",
                "is_user_defined": false,
                "vendor_specific": null,
                "namespace": "vrouter",
                "node_roles": [
                    "controller",
                    "primary-controller"
                ]
            }
        }
    },
    "operator_user": {
        "name": "fueladmin",
        "sudo": "ALL=(ALL) NOPASSWD: ALL",
        "homedir": "/home/fueladmin",
        "password": "egXpoQxbt5rxvDt0shCrcU9n",
        "authkeys": "",
        "metadata": {
            "group": "general",
            "weight": 15,
            "label": "Operating System Access"
        }
    },
    "cgroups": {
        "metadata": {
            "restrictions": [
                {
                    "action": "hide",
                    "condition": "true"
                }
            ],
            "group": "general",
            "always_editable": true,
            "weight": 90,
            "label": "Cgroups conguration for services"
        }
    },
    "provision": {
        "image_data": {
            "/boot": {
                "container": "gzip",
                "uri": "http://10.109.0.2:8080/targetimages/env_1_ubuntu_1404_amd64-boot.img.gz",
                "format": "ext2"
            },
            "/": {
                "container": "gzip",
                "uri": "http://10.109.0.2:8080/targetimages/env_1_ubuntu_1404_amd64.img.gz",
                "format": "ext4"
            }
        },
        "codename": "trusty",
        "packages": "acl\nanacron\nbash-completion\nbridge-utils\nbsdmainutils\nbuild-essential\ncloud-init\ncurl\ndaemonize\ndebconf-utils\ngdisk\ngrub-pc\nhpsa-dkms\nhwloc\ni40e-dkms\nlinux-firmware\nlinux-firmware-nonfree\nlinux-headers-generic-lts-trusty\nlinux-image-generic-lts-trusty\nlvm2\nmcollective\nmdadm\nmultipath-tools\nmultipath-tools-boot\nnailgun-agent\nnailgun-mcagents\nnetwork-checker\nntp\nopenssh-client\nopenssh-server\npuppet\npython-amqp\nruby-augeas\nruby-ipaddress\nruby-json\nruby-netaddr\nruby-openstack\nruby-shadow\nruby-stomp\ntelnet\nubuntu-minimal\nubuntu-standard\nuuid-runtime\nvim\nvirt-what\nvlan\n",
        "method": "image",
        "metadata": {
            "restrictions": [
                {
                    "action": "hide",
                    "condition": "false"
                }
            ],
            "group": "general",
            "weight": 80,
            "label": "Provision"
        }
    },
    "aodh": {
        "db_password": "N7kBTnxB5N236as6CdveS06l",
        "user_password": "5TS3MmxEGwYAbEIqPNFcsewe"
    },
    "nova": {
        "db_password": "66ygvPZrh2nuePHIOaAvSEGJ",
        "user_password": "UTdsK4xlZcGmZ7EZkjFDJi0k",
        "state_path": "/var/lib/nova",
        "enable_hugepages": false
    },
    "master_ip": "10.109.0.2",
    "access": {
        "email": "admin7@localhost",
        "password": "neutronOneController",
        "user": "neutronOneController",
        "tenant": "neutronOneController",
        "metadata": {
            "group": "general",
            "weight": 10,
            "label": "OpenStack Access"
        }
    },
    "external_dns": {
        "dns_list": [
            "10.109.3.1"
        ],
        "metadata": {
            "group": "network",
            "weight": 30,
            "label": "Host OS DNS Servers"
        }
    },
    "murano": {
        "db_password": "3UOR6397jnY6hpJYjy5ugjGk",
        "user_password": "kAvwDxyAufLoL2vEtkvjYDvp",
        "enabled": false,
        "rabbit_password": "TMf2dnUWeHABhQun5mxLSkb6"
    },
    "murano_settings": {
        "murano_repo_url": "http://storage.apps.openstack.org/",
        "metadata": {
            "restrictions": [
                {
                    "action": "hide",
                    "message": "Murano is not enabled on the Additional Components section",
                    "condition": "settings:additional_components.murano.value == false"
                }
            ],
            "group": "openstack_services",
            "weight": 20,
            "label": "Murano Settings"
        }
    },
    "keystone": {
        "db_password": "jH7UBgm36Nxz5VMGGYyOnHbZ",
        "admin_token": "l4rn6dMXVbE7xeXcdw1gSukO"
    },
    "external_mongo": {
        "mongo_db_name": "ceilometer",
        "mongo_replset": "",
        "mongo_user": "ceilometer",
        "metadata": {
            "restrictions": [
                {
                    "action": "hide",
                    "message": "Ceilometer and MongoDB are not enabled on the Additional Components section",
                    "condition": "settings:additional_components.mongo.value == false"
                }
            ],
            "group": "openstack_services",
            "weight": 20,
            "label": "External MongoDB"
        },
        "mongo_password": "ceilometer",
        "hosts_ip": ""
    },
    "online": true,
    "public_network_assignment": {
        "assign_to_all_nodes": false,
        "metadata": {
            "restrictions": [
                {
                    "action": "hide",
                    "condition": "cluster:net_provider != 'neutron'"
                }
            ],
            "group": "network",
            "weight": 10,
            "label": "Public network assignment"
        }
    },
    "nodes": [
        {
            "storage_netmask": "255.255.255.0",
            "name": "node-2",
            "public_address": "10.109.3.4",
            "internal_netmask": "255.255.255.0",
            "fqdn": "node-2.test.domain.local",
            "user_node_name": "slave-01_controller",
            "role": "primary-controller",
            "public_netmask": "255.255.255.0",
            "internal_address": "10.109.1.4",
            "storage_address": "10.109.2.2",
            "swift_zone": "2",
            "uid": "2"
        },
        {
            "storage_netmask": "255.255.255.0",
            "name": "node-3",
            "internal_netmask": "255.255.255.0",
            "fqdn": "node-3.test.domain.local",
            "user_node_name": "slave-02_compute",
            "role": "compute",
            "internal_address": "10.109.1.5",
            "storage_address": "10.109.2.3",
            "swift_zone": "3",
            "uid": "3"
        }
    ],
    "nova_quota": false,
    "node_volumes": [
        {
            "name": "vda",
            "extra": [
                "disk/by-id/virtio-5c5ba6c45fd6411b9d1d"
            ],
            "free_space": 50380,
            "volumes": [
                {
                    "type": "boot",
                    "size": 300
                },
                {
                    "mount": "/boot",
                    "size": 200,
                    "type": "raid",
                    "file_system": "ext2",
                    "name": "Boot"
                },
                {
                    "type": "lvm_meta_pool",
                    "size": 64
                },
                {
                    "vg": "os",
                    "type": "pv",
                    "lvm_meta_size": 64,
                    "size": 19520
                },
                {
                    "vg": "logs",
                    "type": "pv",
                    "lvm_meta_size": 64,
                    "size": 10304
                },
                {
                    "vg": "mysql",
                    "type": "pv",
                    "lvm_meta_size": 64,
                    "size": 20544
                },
                {
                    "vg": "horizon",
                    "type": "pv",
                    "lvm_meta_size": 64,
                    "size": 268
                },
                {
                    "vg": "image",
                    "type": "pv",
                    "lvm_meta_size": 0,
                    "size": 0
                }
            ],
            "type": "disk",
            "id": "vda",
            "size": 51200
        },
        {
            "name": "vdb",
            "extra": [
                "disk/by-id/virtio-36eea623d3e24e808374"
            ],
            "free_space": 50380,
            "volumes": [
                {
                    "type": "boot",
                    "size": 300
                },
                {
                    "mount": "/boot",
                    "size": 200,
                    "type": "raid",
                    "file_system": "ext2",
                    "name": "Boot"
                },
                {
                    "type": "lvm_meta_pool",
                    "size": 192
                },
                {
                    "vg": "os",
                    "type": "pv",
                    "lvm_meta_size": 0,
                    "size": 0
                },
                {
                    "vg": "logs",
                    "type": "pv",
                    "lvm_meta_size": 0,
                    "size": 0
                },
                {
                    "vg": "mysql",
                    "type": "pv",
                    "lvm_meta_size": 0,
                    "size": 0
                },
                {
                    "vg": "horizon",
                    "type": "pv",
                    "lvm_meta_size": 64,
                    "size": 11124
                },
                {
                    "vg": "image",
                    "type": "pv",
                    "lvm_meta_size": 64,
                    "size": 39384
                }
            ],
            "type": "disk",
            "id": "vdb",
            "size": 51200
        },
        {
            "name": "vdc",
            "extra": [
                "disk/by-id/virtio-5f0f20028c674f1b9382"
            ],
            "free_space": 50380,
            "volumes": [
                {
                    "type": "boot",
                    "size": 300
                },
                {
                    "mount": "/boot",
                    "size": 200,
                    "type": "raid",
                    "file_system": "ext2",
                    "name": "Boot"
                },
                {
                    "type": "lvm_meta_pool",
                    "size": 256
                },
                {
                    "vg": "os",
                    "type": "pv",
                    "lvm_meta_size": 0,
                    "size": 0
                },
                {
                    "vg": "logs",
                    "type": "pv",
                    "lvm_meta_size": 0,
                    "size": 0
                },
                {
                    "vg": "mysql",
                    "type": "pv",
                    "lvm_meta_size": 0,
                    "size": 0
                },
                {
                    "vg": "horizon",
                    "type": "pv",
                    "lvm_meta_size": 0,
                    "size": 0
                },
                {
                    "vg": "image",
                    "type": "pv",
                    "lvm_meta_size": 64,
                    "size": 50444
                }
            ],
            "type": "disk",
            "id": "vdc",
            "size": 51200
        },
        {
            "_allocate_size": "min",
            "label": "Base System",
            "min_size": 19456,
            "volumes": [
                {
                    "mount": "/",
                    "size": 15360,
                    "type": "lv",
                    "file_system": "ext4",
                    "name": "root"
                },
                {
                    "mount": "swap",
                    "size": 4096,
                    "type": "lv",
                    "file_system": "swap",
                    "name": "swap"
                }
            ],
            "type": "vg",
            "id": "os"
        },
        {
            "_allocate_size": "min",
            "label": "Logs",
            "min_size": 10240,
            "volumes": [
                {
                    "mount": "/var/log",
                    "size": 10240,
                    "type": "lv",
                    "file_system": "ext4",
                    "name": "log"
                }
            ],
            "type": "vg",
            "id": "logs"
        },
        {
            "_allocate_size": "all",
            "label": "Image Storage",
            "min_size": 5120,
            "volumes": [
                {
                    "mount": "/var/lib/glance",
                    "size": 89700,
                    "type": "lv",
                    "file_system": "xfs",
                    "name": "glance"
                }
            ],
            "type": "vg",
            "id": "image"
        },
        {
            "_allocate_size": "min",
            "label": "Mysql Database",
            "min_size": 20480,
            "volumes": [
                {
                    "mount": "/var/lib/mysql",
                    "size": 20480,
                    "type": "lv",
                    "file_system": "ext4",
                    "name": "root"
                }
            ],
            "type": "vg",
            "id": "mysql"
        },
        {
            "_allocate_size": "min",
            "label": "Horizon Temp Storage",
            "min_size": 11264,
            "volumes": [
                {
                    "mount": "/var/lib/horizon",
                    "size": 11264,
                    "type": "lv",
                    "file_system": "xfs",
                    "name": "horizontmp"
                }
            ],
            "type": "vg",
            "id": "horizon"
        }
    ],
    "ceilometer": {
        "db_password": "fjDKF17ytcp7mn2fYOx59kjp",
        "user_password": "iQVjq3O0yUemwORWnRJNPzxl",
        "metering_secret": "T5QPqWHXZsZLshLlP4WZnGma",
        "enabled": false
    },
    "external_ntp": {
        "ntp_list": [
            "0.fuel.pool.ntp.org",
            "1.fuel.pool.ntp.org",
            "2.fuel.pool.ntp.org"
        ],
        "metadata": {
            "group": "network",
            "weight": 40,
            "label": "Host OS NTP Servers"
        }
    },
    "dpdk": {},
    "status": "ready",
    "auth_key": "",
    "ironic": {
        "swift_tempurl_key": "3A4WWjzAMCzdSBhmkBZiDBaO",
        "db_password": "QoMoE645iLKiyNDdfj3VFprG",
        "user_password": "IGsnN7wWnFAvKxvwy5bCiifx",
        "enabled": false
    },
    "task_deploy": true,
    "horizon": {
        "secret_key": "ce9a1b1c2ea03cf64e67995365c87a05a082defae1268eff10c8a39e12a91d52"
    },
    "workloads_collector": {
        "username": "fuel_stats_user",
        "enabled": true,
        "create_user": true,
        "password": "HFWErbnE19rWSV6djoJorfxg",
        "tenant": "services",
        "metadata": {
            "restrictions": [
                {
                    "action": "hide",
                    "condition": "true"
                }
            ],
            "group": "general",
            "weight": 10,
            "label": "Workloads Collector User"
        }
    },
    "use_vcenter": false,
    "network_scheme": {
        "transformations": [
            {
                "action": "add-br",
                "name": "br-fw-admin"
            },
            {
                "action": "add-br",
                "name": "br-mgmt"
            },
            {
                "action": "add-br",
                "name": "br-storage"
            },
            {
                "action": "add-br",
                "name": "br-ex"
            },
            {
                "action": "add-br",
                "name": "br-floating",
                "provider": "ovs"
            },
            {
                "action": "add-patch",
                "bridges": [
                    "br-floating",
                    "br-ex"
                ],
                "provider": "ovs",
                "mtu": 65000
            },
            {
                "action": "add-br",
                "name": "br-prv",
                "provider": "ovs"
            },
            {
                "action": "add-br",
                "name": "br-aux"
            },
            {
                "action": "add-patch",
                "bridges": [
                    "br-prv",
                    "br-aux"
                ],
                "provider": "ovs",
                "mtu": 65000
            },
            {
                "action": "add-port",
                "bridge": "br-fw-admin",
                "name": "enp0s3"
            },
            {
                "action": "add-port",
                "bridge": "br-ex",
                "name": "enp0s4"
            },
            {
                "action": "add-port",
                "bridge": "br-mgmt",
                "name": "enp0s5"
            },
            {
                "action": "add-port",
                "bridge": "br-aux",
                "name": "enp0s6"
            },
            {
                "action": "add-port",
                "bridge": "br-storage",
                "name": "enp0s7"
            }
        ],
        "roles": {
            "murano/api": "br-mgmt",
            "keystone/api": "br-mgmt",
            "neutron/api": "br-mgmt",
            "mgmt/database": "br-mgmt",
            "sahara/api": "br-mgmt",
            "ceilometer/api": "br-mgmt",
            "ex": "br-ex",
            "ceph/public": "br-storage",
            "ceph/radosgw": "br-ex",
            "management": "br-mgmt",
            "swift/api": "br-mgmt",
            "storage": "br-storage",
            "mgmt/corosync": "br-mgmt",
            "glance/glare": "br-mgmt",
            "aodh/api": "br-mgmt",
            "cinder/api": "br-mgmt",
            "public/vip": "br-ex",
            "swift/replication": "br-storage",
            "mgmt/messaging": "br-mgmt",
            "admin/pxe": "br-fw-admin",
            "mongo/db": "br-mgmt",
            "neutron/private": "br-prv",
            "neutron/floating": "br-floating",
            "fw-admin": "br-fw-admin",
            "glance/api": "br-mgmt",
            "mgmt/vip": "br-mgmt",
            "heat/api": "br-mgmt",
            "cinder/iscsi": "br-storage",
            "nova/api": "br-mgmt",
            "murano/cfapi": "br-mgmt",
            "horizon": "br-mgmt",
            "nova/migration": "br-mgmt",
            "mgmt/memcache": "br-mgmt",
            "ironic/api": "br-mgmt",
            "ceph/replication": "br-storage"
        },
        "interfaces": {
            "enp0s6": {
                "vendor_specific": {
                    "driver": "e1000",
                    "bus_info": "0000:00:06.0"
                }
            },
            "enp0s7": {
                "vendor_specific": {
                    "driver": "e1000",
                    "bus_info": "0000:00:07.0"
                }
            },
            "enp0s4": {
                "vendor_specific": {
                    "driver": "e1000",
                    "bus_info": "0000:00:04.0"
                }
            },
            "enp0s5": {
                "vendor_specific": {
                    "driver": "e1000",
                    "bus_info": "0000:00:05.0"
                }
            },
            "enp0s3": {
                "vendor_specific": {
                    "driver": "e1000",
                    "bus_info": "0000:00:03.0"
                }
            }
        },
        "version": "1.1",
        "provider": "lnx",
        "endpoints": {
            "br-fw-admin": {
                "IP": [
                    "10.109.0.3/24"
                ],
                "vendor_specific": {
                    "provider_gateway": "10.109.0.1"
                }
            },
            "br-prv": {
                "IP": "none"
            },
            "br-floating": {
                "IP": "none"
            },
            "br-storage": {
                "IP": [
                    "10.109.2.2/24"
                ]
            },
            "br-mgmt": {
                "IP": [
                    "10.109.1.4/24"
                ]
            },
            "br-ex": {
                "IP": [
                    "10.109.3.4/24"
                ],
                "vendor_specific": {
                    "provider_gateway": "10.109.3.1"
                },
                "gateway": "10.109.3.1"
            }
        }
    },
    "debug": true,
    "heat": {
        "db_password": "m262nPaXlsxlII8kLTGuu3Er",
        "user_password": "XS6Iw3w5R9BFFgTACu8Q5l9n",
        "enabled": true,
        "auth_encryption_key": "fd879651d50e4e90c8bca669a500cad5",
        "rabbit_password": "pjVbQAMbRwOdxC3IyddlWwOX"
    },
    "auto_assign_floating_ip": false,
    "fuel_version": "9.0",
    "rabbit": {
        "password": "WzzEQ2dRE4VVSui9Z24SuJrL"
    },
    "resume_guests_state_on_host_boot": true,
    "openstack_version": "liberty-9.0",
    "configuration": {},
    "swift": {
        "user_password": "FjWpLVEUceHSgKq2yQX56zvP"
    },
    "neutron_advanced_configuration": {
        "neutron_qos": false,
        "neutron_l3_ha": false,
        "neutron_dvr": false,
        "neutron_l2_pop": false,
        "metadata": {
            "restrictions": [
                {
                    "action": "hide",
                    "condition": "cluster:net_provider != 'neutron'"
                }
            ],
            "group": "network",
            "weight": 20,
            "label": "Neutron Advanced Configuration"
        }
    },
    "service_user": {
        "homedir": "/var/lib/fuel",
        "sudo": "ALL=(ALL) NOPASSWD: ALL",
        "name": "fuel",
        "root_password": "r00tme",
        "password": "bIeTm5B9DL07ESkvbYehgGL1",
        "metadata": {
            "restrictions": [
                {
                    "action": "hide",
                    "condition": "true"
                }
            ],
            "group": "general",
            "weight": 10,
            "label": "Service user account"
        }
    },
    "base_syslog": {
        "syslog_port": "514",
        "syslog_server": "10.109.0.2"
    },
    "vms_conf": [],
    "management_network_range": "10.109.1.0/24",
    "murano_glance_artifacts_plugin": {
        "enabled": false
    },
    "roles": [
        "primary-controller"
    ],
    "cluster": {
        "status": "operational",
        "is_customized": false,
        "release_id": 2,
        "name": "HAOneControllerNeutron",
        "is_locked": false,
        "ui_settings": {
            "sort": [
                {
                    "roles": "asc"
                }
            ],
            "sort_by_labels": [],
            "search": "",
            "filter_by_labels": {},
            "filter": {},
            "view_mode": "standard"
        },
        "net_provider": "neutron",
        "fuel_version": "9.0",
        "components": [],
        "changes": [],
        "id": 1,
        "mode": "ha_compact"
    },
    "repo_setup": {
        "installer_kernel": {
            "local": "/var/www/nailgun/ubuntu/x86_64/images/linux",
            "remote_relative": "dists/trusty/main/installer-amd64/current/images/netboot/ubuntu-installer/amd64/linux"
        },
        "repos": [
            {
                "name": "ubuntu-0",
                "section": "main universe multiverse",
                "uri": "http://mirror-pkgs.vm.mirantis.net/ubuntu-2016-03-29-170322",
                "priority": 1001,
                "suite": "trusty",
                "type": "deb"
            },
            {
                "name": "ubuntu-1",
                "section": "main universe multiverse",
                "uri": "http://mirror-pkgs.vm.mirantis.net/ubuntu-2016-03-29-170322",
                "priority": 1001,
                "suite": "trusty-updates",
                "type": "deb"
            },
            {
                "name": "ubuntu-2",
                "section": "main universe multiverse",
                "uri": "http://mirror-pkgs.vm.mirantis.net/ubuntu-2016-03-29-170322",
                "priority": 1001,
                "suite": "trusty-security",
                "type": "deb"
            },
            {
                "name": "ubuntu-3",
                "section": "main universe multiverse",
                "uri": "http://mirror-pkgs.vm.mirantis.net/ubuntu-2016-03-29-170322",
                "priority": 1001,
                "suite": "trusty-proposed",
                "type": "deb"
            },
            {
                "name": "mos",
                "section": "main restricted",
                "uri": "http://10.109.0.2:8080/liberty-9.0/ubuntu/x86_64",
                "priority": 1050,
                "suite": "mos9.0",
                "type": "deb"
            },
            {
                "name": "mos-updates",
                "section": "main restricted",
                "uri": "http://mirror.fuel-infra.org/mos-repos/ubuntu/9.0/",
                "priority": 1050,
                "suite": "mos9.0-updates",
                "type": "deb"
            },
            {
                "name": "mos-security",
                "section": "main restricted",
                "uri": "http://mirror.fuel-infra.org/mos-repos/ubuntu/9.0/",
                "priority": 1050,
                "suite": "mos9.0-security",
                "type": "deb"
            },
            {
                "name": "mos-holdback",
                "section": "main restricted",
                "uri": "http://mirror.fuel-infra.org/mos-repos/ubuntu/9.0/",
                "priority": 1100,
                "suite": "mos9.0-holdback",
                "type": "deb"
            },
            {
                "name": "Auxiliary",
                "section": "main restricted",
                "uri": "http://10.109.0.2:8080/liberty-9.0/ubuntu/auxiliary",
                "priority": 1150,
                "suite": "auxiliary",
                "type": "deb"
            }
        ],
        "metadata": {
            "group": "general",
            "always_editable": true,
            "weight": 50,
            "label": "Repositories"
        },
        "installer_initrd": {
            "local": "/var/www/nailgun/ubuntu/x86_64/images/initrd.gz",
            "remote_relative": "dists/trusty/main/installer-amd64/current/images/netboot/ubuntu-installer/amd64/initrd.gz"
        }
    },
    "test_vm_image": {
        "os_name": "cirros",
        "img_path": "/usr/share/cirros-testvm/cirros-x86_64-disk.img",
        "container_format": "bare",
        "min_ram": 64,
        "disk_format": "qcow2",
        "glance_properties": "",
        "img_name": "TestVM",
        "public": "true"
    },
    "puppet_debug": true,
    "last_controller": "node-2",
    "fqdn": "node-2.test.domain.local",
    "public_ssl": {
        "hostname": "public.fuel.local",
        "horizon": true,
        "services": true,
        "cert_data": {
            "content": "-----BEGIN CERTIFICATE-----\nMIIC7TCCAdUCAgPoMA0GCSqGSIb3DQEBBQUAMDwxHjAcBgNVBAsMFU1pcmFudGlz\nIEZ1ZWwtUUEgVGVhbTEaMBgGA1UEAwwRcHVibGljLmZ1ZWwubG9jYWwwHhcNMTYw\nMzMwMTEzMjQwWhcNMjYwMzI4MTEzMjQwWjA8MR4wHAYDVQQLDBVNaXJhbnRpcyBG\ndWVsLVFBIFRlYW0xGjAYBgNVBAMMEXB1YmxpYy5mdWVsLmxvY2FsMIIBIjANBgkq\nhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAr31W/jQFVzqR5xW39ZZx/dc1WmkWCmOj\nuVkD27qPV6Fd5hktnQaqpUdPS1ObH46A/x+JehxkGSkkHcjqCsvHnSdtgHbP8hem\neGH7dPPWot/yw6evO4hGVZNqBIjWw0Ov/BbZI/jt9VSnzqMBDuxdIEnAxLQXvZpQ\nxujVnXQ2kJ0dvClTg43q/TZmNHseF+59kWqL76cSq4XL+d4HHSXEpvYaoL0Q4L0E\n0x5gwzXgR6vOIM4qmQPJab2MRYyfcbM/iuX3i7k/GHCa/Gx8YkrEOQJ7PyIH+Q5M\n1dd3uKxUX56a/RWHzHmTzb6vgZdukgvPnKXJmWvaemQmpVFQBEPrVwIDAQABMA0G\nCSqGSIb3DQEBBQUAA4IBAQAd6Cd1dKK0yV5mFR2eVaWEm/xx2lSzN/wa1DlA0tld\n9rvV63nCbaS2gMO3ri9EeGH4XVCYSdlutAL7gwppYa50uHfxkpEGf2tiH59q49Bt\nHXr7qS/7rvqygt8Pfru7ymsTQCEuqxUW4x5cQdVuAj4FE7NISV4VvzqeMwBisdG+\nKwjtR8rvBDEmmTfLfHCcl11l2qAwEJ9To5E/jB9PsPhAhUC4xgHAbIO0TX78vZmR\nxcMl1nTSgViuCuiARigl+Cx8+P28FcYkAJrQ/2/4nIzEbvmmQL8kJRbY6zb2Yvih\n2pdk9CL8OI6B3p++E0p+BiA999hPwJ4zfEI9BFxp7+hg\n-----END CERTIFICATE-----\n-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCvfVb+NAVXOpHn\nFbf1lnH91zVaaRYKY6O5WQPbuo9XoV3mGS2dBqqlR09LU5sfjoD/H4l6HGQZKSQd\nyOoKy8edJ22Ads/yF6Z4Yft089ai3/LDp687iEZVk2oEiNbDQ6/8Ftkj+O31VKfO\nowEO7F0gScDEtBe9mlDG6NWddDaQnR28KVODjer9NmY0ex4X7n2RaovvpxKrhcv5\n3gcdJcSm9hqgvRDgvQTTHmDDNeBHq84gziqZA8lpvYxFjJ9xsz+K5feLuT8YcJr8\nbHxiSsQ5Ans/Igf5DkzV13e4rFRfnpr9FYfMeZPNvq+Bl26SC8+cpcmZa9p6ZCal\nUVAEQ+tXAgMBAAECggEAfjeH+g0wSiy2A557UQeDtS60EPLEB3TirMx5GfB0aHKH\nNpelVusUkQtY3LSlPW0hGl10Y39H/1C3yTRYIKuwRje1alAJ//VCphLS6Kr4FO09\njbttLUQ2UhZUii5hSM/GI2nLgzPm8iyRBO34NOOLl010eAWPja8PqgCMo1KSbC9j\ndwL5XHAZIBhtGzMAOD/MTAxT4cruw6B+Ht5C1zKOEaT1MO0GZybqqj+d1hcnFUIW\ngbg2GDxPebBPHMpfUYYIdjKHKZ0m/HqDCnZGNrGVimHswNEJxx8dd7CVpMfIK8KZ\njsv0iFx+XUcrrLzuBEnDJwf75fSHNzIzyZF7ijOpAQKBgQDgBwkpS4+zJSYFVEmm\nrQ6tsteSGmEkigj6+qaWrQQnswopxfqm4n9VU6DeAQLBBoIHU9rNkySwTAXsK2ls\nD0QcwkDUV56b2L2hdSW50PU9ho9L7YpSi/B7O6MR6fbF4k3S6UbPq50mrlzwPhkk\nehLJKoC4L2LP2DPKWISNni/ytQKBgQDIiPJeL8X3GrS3fiwajMOh7FgPTpanqi5s\n5P5AWqNoyqD/ghypJRlD/95xyFeiZwAs+KrC84XmP5vFORu/qMrCLJq5YiLjwuf8\nG7vOqbW9/Fvxx8kCSUQz2LHOJGdzyvGDVXjYsQS1zX6MaEqG6k8v5ESCTiOPheVl\nL79ZczQxWwKBgQCYx3OR+/v1+kGhpMfNqXu3LZ4h/2d8Wb6iGsn9O+T3hfxKXMAB\ni7m24R92B05vgRawFJnFVLHSoSXw1/I/RXH4AunfZhm+wuMf9xpRTJXS7a9P4qFQ\nhirsf9FH6Dzo2tqkGX63JZw4wvSSymavH6ksE5ZRBc/nWtSHDDLpuZWNeQKBgAqF\n3SoCGcJIvXjvfwL5pf5mN4y+E/vCW2NNdOYNm4uRLneZ7UUW9Ed0MskHuUmFXCX/\n+n32Z21YoyTrRUB+a/1ad9gIhUosXR4GmolSsH3Cs1RxpmOfUpvh4BqwIFmcKaY5\novjD+TpNCTn28wo3W2Zo9QtdbFJItWvk4IaiG/gHAoGAP397C3iwAVYxlQ0N1ycl\nQitIG0nHDpq6lEp1P50rXdmMv5MdfcQkdq1kMLF8zGdEKEOrfzdmA3gEwZT8v/w4\nqOdM9XMeFGog3bhwkbvfpCkqmmtMIk12IkuFJVD96kGnkKqkW9y4RL7DALNj8Jcm\nVKVsRPIUCi2RBIAG+Cw6lss=\n-----END PRIVATE KEY-----\n",
            "name": "ca.pem"
        },
        "cert_source": "user_uploaded",
        "metadata": {
            "group": "security",
            "weight": 110,
            "label": "Public TLS"
        }
    },
    "deployed_before": {
        "value": true
    },
    "kernel_params": {
        "kernel": "console=tty0 net.ifnames=0 biosdevname=0 rootdelay=90 nomodeset",
        "metadata": {
            "group": "general",
            "weight": 60,
            "label": "Kernel parameters"
        }
    },
    "mp": [
        {
            "weight": "1",
            "point": "1"
        },
        {
            "weight": "2",
            "point": "2"
        }
    ],
    "deployment_mode": "ha_compact",
    "release": {
        "operating_system": "Ubuntu",
        "description": "This option will install the OpenStack Liberty packages using Ubuntu as a base operating system. With high availability features built in, you are getting a robust, enterprise-grade OpenStack deployment.",
        "is_deployable": true,
        "components_metadata": [
            {
                "name": "hypervisor:qemu",
                "weight": 5,
                "default": true,
                "bind": [
                    [
                        "settings:common.libvirt_type.value",
                        "qemu"
                    ]
                ],
                "label": "dialog.create_cluster_wizard.compute.qemu",
                "compatible": [
                    {
                        "name": "hypervisor:vmware"
                    }
                ],
                "description": "dialog.create_cluster_wizard.compute.qemu_description"
            },
            {
                "description": "dialog.create_cluster_wizard.compute.vcenter_description",
                "weight": 15,
                "bind": [
                    "settings:common.use_vcenter.value"
                ],
                "label": "dialog.create_cluster_wizard.compute.vcenter",
                "compatible": [
                    {
                        "name": "hypervisor:qemu"
                    }
                ],
                "requires": [
                    {
                        "message": "dialog.create_cluster_wizard.compute.vcenter_warning",
                        "name": "hypervisor:qemu"
                    }
                ],
                "name": "hypervisor:vmware"
            },
            {
                "description": "dialog.create_cluster_wizard.network.neutron_ml2_description",
                "weight": 1000,
                "default": true,
                "label": "dialog.create_cluster_wizard.network.neutron_ml2",
                "compatible": [
                    {
                        "name": "hypervisor:*"
                    },
                    {
                        "name": "network:neutron:ml2:*"
                    }
                ],
                "name": "network:neutron:core:ml2"
            },
            {
                "description": "dialog.create_cluster_wizard.network.neutron_vlan_description",
                "weight": 5,
                "incompatible": [
                    {
                        "message": "dialog.create_cluster_wizard.network.vlan_tun_alert",
                        "name": "network:neutron:ml2:tun"
                    }
                ],
                "default": true,
                "bind": [
                    [
                        "cluster:net_provider",
                        "neutron"
                    ],
                    [
                        "cluster:net_segment_type",
                        "vlan"
                    ]
                ],
                "label": "common.network.neutron_vlan",
                "compatible": [
                    {
                        "name": "network:neutron:core:ml2"
                    },
                    {
                        "name": "hypervisor:qemu"
                    }
                ],
                "requires": [
                    {
                        "name": "network:neutron:core:ml2"
                    }
                ],
                "name": "network:neutron:ml2:vlan"
            },
            {
                "description": "dialog.create_cluster_wizard.network.neutron_tun_description",
                "weight": 10,
                "incompatible": [
                    {
                        "message": "dialog.create_cluster_wizard.network.vlan_tun_alert",
                        "name": "network:neutron:ml2:vlan"
                    },
                    {
                        "message": "dialog.create_cluster_wizard.network.hypervisor_alert",
                        "name": "hypervisor:vmware"
                    },
                    {
                        "message": "dialog.create_cluster_wizard.additional.ironic_network_mode_alert",
                        "name": "additional_service:ironic"
                    }
                ],
                "bind": [
                    [
                        "cluster:net_provider",
                        "neutron"
                    ],
                    [
                        "cluster:net_segment_type",
                        "tun"
                    ]
                ],
                "label": "common.network.neutron_tun",
                "compatible": [
                    {
                        "name": "network:neutron:core:ml2"
                    },
                    {
                        "name": "hypervisor:qemu"
                    }
                ],
                "requires": [
                    {
                        "name": "network:neutron:core:ml2"
                    }
                ],
                "name": "network:neutron:ml2:tun"
            },
            {
                "description": "dialog.create_cluster_wizard.storage.default_provider",
                "weight": 5,
                "incompatible": [
                    {
                        "message": "LVM not compatible with Ceph",
                        "name": "storage:block:ceph"
                    }
                ],
                "default": true,
                "bind": [
                    "settings:storage.volumes_lvm.value"
                ],
                "label": "dialog.create_cluster_wizard.storage.lvm",
                "compatible": [
                    {
                        "name": "hypervisor:qemu"
                    },
                    {
                        "name": "hypervisor:vmware"
                    },
                    {
                        "name": "network:neutron:core:ml2"
                    },
                    {
                        "name": "network:neutron:ml2:vlan"
                    },
                    {
                        "name": "network:neutron:ml2:tun"
                    }
                ],
                "name": "storage:block:lvm"
            },
            {
                "name": "storage:block:ceph",
                "weight": 10,
                "incompatible": [
                    {
                        "message": "Ceph not compatible with LVM",
                        "name": "storage:block:lvm"
                    }
                ],
                "bind": [
                    [
                        "settings:storage.volumes_ceph.value",
                        true
                    ],
                    [
                        "settings:storage.volumes_lvm.value",
                        false
                    ]
                ],
                "label": "dialog.create_cluster_wizard.storage.ceph",
                "compatible": [
                    {
                        "name": "hypervisor:qemu"
                    },
                    {
                        "name": "hypervisor:vmware"
                    },
                    {
                        "name": "network:neutron:core:ml2"
                    },
                    {
                        "name": "network:neutron:ml2:vlan"
                    },
                    {
                        "name": "network:neutron:ml2:tun"
                    },
                    {
                        "name": "storage:object:ceph"
                    },
                    {
                        "name": "storage:ephemeral:ceph"
                    },
                    {
                        "name": "storage:image:ceph"
                    }
                ],
                "description": "dialog.create_cluster_wizard.storage.ceph_block"
            },
            {
                "description": "dialog.create_cluster_wizard.storage.ceph_object",
                "weight": 10,
                "bind": [
                    "settings:storage.objects_ceph.value"
                ],
                "label": "dialog.create_cluster_wizard.storage.ceph",
                "compatible": [
                    {
                        "name": "hypervisor:qemu"
                    },
                    {
                        "name": "hypervisor:vmware"
                    },
                    {
                        "name": "network:neutron:core:ml2"
                    },
                    {
                        "name": "network:neutron:ml2:vlan"
                    },
                    {
                        "name": "network:neutron:ml2:tun"
                    },
                    {
                        "name": "storage:block:lvm"
                    },
                    {
                        "name": "storage:block:ceph"
                    },
                    {
                        "name": "storage:ephemeral:ceph"
                    },
                    {
                        "name": "storage:image:ceph"
                    }
                ],
                "name": "storage:object:ceph"
            },
            {
                "description": "dialog.create_cluster_wizard.storage.ceph_ephemeral",
                "weight": 10,
                "bind": [
                    "settings:storage.ephemeral_ceph.value"
                ],
                "label": "dialog.create_cluster_wizard.storage.ceph",
                "compatible": [
                    {
                        "name": "hypervisor:qemu"
                    },
                    {
                        "name": "hypervisor:vmware"
                    },
                    {
                        "name": "network:neutron:core:ml2"
                    },
                    {
                        "name": "network:neutron:ml2:vlan"
                    },
                    {
                        "name": "network:neutron:ml2:tun"
                    },
                    {
                        "name": "storage:block:lvm"
                    },
                    {
                        "name": "storage:block:ceph"
                    },
                    {
                        "name": "storage:object:ceph"
                    },
                    {
                        "name": "storage:image:ceph"
                    }
                ],
                "name": "storage:ephemeral:ceph"
            },
            {
                "description": "dialog.create_cluster_wizard.storage.ceph_image",
                "weight": 10,
                "bind": [
                    "settings:storage.images_ceph.value"
                ],
                "label": "dialog.create_cluster_wizard.storage.ceph",
                "compatible": [
                    {
                        "name": "hypervisor:qemu"
                    },
                    {
                        "name": "hypervisor:vmware"
                    },
                    {
                        "name": "network:neutron:core:ml2"
                    },
                    {
                        "name": "network:neutron:ml2:vlan"
                    },
                    {
                        "name": "network:neutron:ml2:tun"
                    },
                    {
                        "name": "storage:block:lvm"
                    },
                    {
                        "name": "storage:block:ceph"
                    },
                    {
                        "name": "storage:object:ceph"
                    },
                    {
                        "name": "storage:ephemeral:ceph"
                    }
                ],
                "name": "storage:image:ceph"
            },
            {
                "description": "dialog.create_cluster_wizard.additional.install_sahara_description",
                "weight": 10,
                "bind": [
                    "settings:additional_components.sahara.value"
                ],
                "label": "dialog.create_cluster_wizard.additional.install_sahara",
                "compatible": [
                    {
                        "name": "hypervisor:qemu"
                    },
                    {
                        "name": "hypervisor:vmware"
                    },
                    {
                        "name": "network:neutron:core:ml2"
                    },
                    {
                        "name": "network:neutron:ml2:vlan"
                    },
                    {
                        "name": "network:neutron:ml2:tun"
                    },
                    {
                        "name": "storage:block:lvm"
                    },
                    {
                        "name": "storage:block:ceph"
                    },
                    {
                        "name": "storage:object:ceph"
                    },
                    {
                        "name": "storage:ephemeral:ceph"
                    },
                    {
                        "name": "storage:image:ceph"
                    },
                    {
                        "name": "additional_service:sahara"
                    },
                    {
                        "name": "additional_service:murano"
                    },
                    {
                        "name": "additional_service:ceilometer"
                    },
                    {
                        "name": "additional_service:ironic"
                    }
                ],
                "name": "additional_service:sahara"
            },
            {
                "description": "dialog.create_cluster_wizard.additional.install_murano_description",
                "weight": 20,
                "bind": [
                    "settings:additional_components.murano.value"
                ],
                "label": "dialog.create_cluster_wizard.additional.install_murano",
                "compatible": [
                    {
                        "name": "hypervisor:qemu"
                    },
                    {
                        "name": "hypervisor:vmware"
                    },
                    {
                        "name": "network:neutron:core:ml2"
                    },
                    {
                        "name": "network:neutron:ml2:vlan"
                    },
                    {
                        "name": "network:neutron:ml2:tun"
                    },
                    {
                        "name": "storage:block:lvm"
                    },
                    {
                        "name": "storage:block:ceph"
                    },
                    {
                        "name": "storage:object:ceph"
                    },
                    {
                        "name": "storage:ephemeral:ceph"
                    },
                    {
                        "name": "storage:image:ceph"
                    },
                    {
                        "name": "additional_service:sahara"
                    },
                    {
                        "name": "additional_service:ceilometer"
                    },
                    {
                        "name": "additional_service:ironic"
                    }
                ],
                "name": "additional_service:murano"
            },
            {
                "description": "dialog.create_cluster_wizard.additional.install_ceilometer_description",
                "weight": 30,
                "bind": [
                    "settings:additional_components.ceilometer.value"
                ],
                "label": "dialog.create_cluster_wizard.additional.install_ceilometer",
                "compatible": [
                    {
                        "name": "hypervisor:qemu"
                    },
                    {
                        "name": "hypervisor:vmware"
                    },
                    {
                        "name": "network:neutron:core:ml2"
                    },
                    {
                        "name": "network:neutron:ml2:vlan"
                    },
                    {
                        "name": "network:neutron:ml2:tun"
                    },
                    {
                        "name": "storage:block:lvm"
                    },
                    {
                        "name": "storage:block:ceph"
                    },
                    {
                        "name": "storage:object:ceph"
                    },
                    {
                        "name": "storage:ephemeral:ceph"
                    },
                    {
                        "name": "storage:image:ceph"
                    },
                    {
                        "name": "additional_service:sahara"
                    },
                    {
                        "name": "additional_service:murano"
                    },
                    {
                        "name": "additional_service:ironic"
                    }
                ],
                "name": "additional_service:ceilometer"
            },
            {
                "name": "additional_service:ironic",
                "weight": 40,
                "incompatible": [
                    {
                        "message": "dialog.create_cluster_wizard.additional.ironic_network_mode_alert",
                        "name": "network:neutron:ml2:tun"
                    }
                ],
                "bind": [
                    "settings:additional_components.ironic.value"
                ],
                "label": "dialog.create_cluster_wizard.additional.install_ironic",
                "compatible": [
                    {
                        "name": "hypervisor:qemu"
                    },
                    {
                        "name": "network:neutron:core:ml2"
                    },
                    {
                        "name": "network:neutron:ml2:vlan"
                    },
                    {
                        "name": "storage:block:lvm"
                    },
                    {
                        "name": "storage:block:ceph"
                    },
                    {
                        "name": "storage:object:ceph"
                    },
                    {
                        "name": "storage:ephemeral:ceph"
                    },
                    {
                        "name": "storage:image:ceph"
                    },
                    {
                        "name": "additional_service:sahara"
                    },
                    {
                        "name": "additional_service:murano"
                    },
                    {
                        "name": "additional_service:ceilometer"
                    }
                ],
                "description": "dialog.create_cluster_wizard.additional.install_ironic_description"
            }
        ],
        "state": "available",
        "version": "liberty-9.0",
        "roles_metadata": {
            "compute-vmware": {
                "restrictions": [
                    {
                        "action": "hide",
                        "condition": "settings:common.use_vcenter.value == false"
                    }
                ],
                "group": "compute",
                "description": "A node that runs nova-compute with VCDriver, that manages ESXi computing resources via VMware vCenter.",
                "weight": 90,
                "conflicts": [
                    "controller",
                    "compute",
                    "cinder",
                    "cinder-block-device",
                    "ceph-osd",
                    "mongo",
                    "base-os",
                    "virt",
                    "ironic"
                ],
                "name": "Compute VMware"
            },
            "compute": {
                "group": "compute",
                "description": "A Compute node creates, manages, and terminates virtual machine instances.",
                "limits": {
                    "recommended": 1
                },
                "fault_tolerance": "2%",
                "weight": 20,
                "public_for_dvr_required": true,
                "name": "Compute"
            },
            "cinder-vmware": {
                "restrictions": [
                    {
                        "action": "hide",
                        "condition": "settings:common.use_vcenter.value == false"
                    }
                ],
                "group": "storage",
                "description": "Cinder-VMware provides scheduling of block storage resources delivered over VMware vCenter. Block storage can be used for database storage, expandable file systems, or providing a server with access to raw block level devices.",
                "limits": {
                    "recommended": 1
                },
                "weight": 40,
                "name": "Cinder Proxy to VMware Datastore"
            },
            "virt": {
                "restrictions": [
                    {
                        "action": "hide",
                        "condition": "not ('advanced' in version:feature_groups)"
                    }
                ],
                "group": "compute",
                "description": "ADVANCED: Make available possibilities to spawn vms on this node that can be assign as a normal nodes.",
                "weight": 80,
                "public_ip_required": true,
                "conflicts": [
                    "controller",
                    "base-os"
                ],
                "name": "Virtual"
            },
            "base-os": {
                "group": "other",
                "description": "Install base Operating System without additional packages and configuration.",
                "weight": 70,
                "name": "Operating System"
            },
            "controller": {
                "limits": {
                    "overrides": [
                        {
                            "message": "Neutron L3 HA requires at least 2 Controller nodes to function properly.",
                            "condition": "settings:neutron_advanced_configuration.neutron_l3_ha.value == true",
                            "min": 2
                        }
                    ],
                    "recommended": 3,
                    "min": 1
                },
                "group": "base",
                "description": "The Controller initiates orchestration activities and provides an external API.  Other components like Glance (image storage), Keystone (identity management), Horizon (OpenStack dashboard) and Nova-Scheduler are installed on the controller as well.",
                "weight": 10,
                "update_required": [
                    "compute",
                    "cinder"
                ],
                "has_primary": true,
                "public_ip_required": true,
                "conflicts": [
                    "compute"
                ],
                "public_for_dvr_required": true,
                "name": "Controller"
            },
            "ceph-osd": {
                "restrictions": [
                    {
                        "message": "Ceph must be enabled in settings",
                        "condition": "settings:storage.volumes_ceph.value == false and settings:storage.images_ceph.value == false and settings:storage.ephemeral_ceph.value == false and settings:storage.objects_ceph.value == false"
                    }
                ],
                "group": "storage",
                "weight": 50,
                "limits": {
                    "min": "settings:storage.osd_pool_size.value"
                },
                "name": "Ceph OSD",
                "update_once": [
                    "controller"
                ],
                "description": "Ceph storage can be configured to provide storage for block volumes (Cinder), images (Glance) and ephemeral instance storage (Nova). It can also provide object storage through the S3 and Swift API (See settings to enable each)."
            },
            "ironic": {
                "restrictions": [
                    {
                        "message": "Ironic should be enabled.",
                        "condition": "settings:additional_components.ironic.value == false"
                    }
                ],
                "group": "compute",
                "description": "Ironic conductor",
                "weight": 100,
                "limits": {
                    "recommended": 3,
                    "min": 1
                },
                "conflicts": [
                    "compute"
                ],
                "name": "Ironic"
            },
            "cinder-block-device": {
                "restrictions": [
                    {
                        "message": "Cinder Block Device should be enabled in settings",
                        "condition": "settings:storage.volumes_block_device.value == false"
                    },
                    {
                        "message": "Ceph RBD cannot be used with Cinder Block Device",
                        "condition": "settings:storage.volumes_ceph.value == true"
                    }
                ],
                "group": "storage",
                "description": "Host node for Cinder Block Devices",
                "weight": 35,
                "has_primary": false,
                "public_ip_required": false,
                "conflicts": [
                    "controller",
                    "cinder",
                    "cinder-vmware",
                    "ceph-osd"
                ],
                "name": "Cinder Block Device"
            },
            "cinder": {
                "restrictions": [
                    {
                        "message": "Cinder LVM should be enabled in settings",
                        "condition": "settings:storage.volumes_lvm.value == false"
                    },
                    {
                        "message": "Ceph RBD cannot be used with Cinder",
                        "condition": "settings:storage.volumes_ceph.value == true"
                    }
                ],
                "group": "storage",
                "description": "Cinder provides scheduling of block storage resources, typically delivered over iSCSI and other compatible backend storage systems. Block storage can be used for database storage, expandable file systems, or to provide a server with access to raw block level devices.",
                "limits": {
                    "recommended": 1
                },
                "weight": 30,
                "name": "Cinder"
            },
            "mongo": {
                "restrictions": [
                    {
                        "message": "Ceilometer should be enabled.",
                        "condition": "settings:additional_components.ceilometer.value == false"
                    },
                    {
                        "message": "You are already using external MongoDB.",
                        "condition": "settings:additional_components.mongo.value == true"
                    }
                ],
                "group": "other",
                "description": "A feature-complete and recommended database for storage of metering data from OpenStack Telemetry (Ceilometer).",
                "weight": 60,
                "has_primary": true,
                "limits": {
                    "overrides": [
                        {
                            "max": 1,
                            "message": "At most 1 MongoDB node can be added for non-HA deployment",
                            "condition": "cluster:mode != 'ha_compact'"
                        },
                        {
                            "message": "At least 3 MongoDB nodes are recommended for HA deployment.",
                            "recommended": 3,
                            "condition": "cluster:mode == 'ha_compact'"
                        }
                    ],
                    "min": 1
                },
                "conflicts": [
                    "compute",
                    "ceph-osd"
                ],
                "name": "Telemetry - MongoDB"
            }
        },
        "vmware_attributes_metadata": {
            "editable": {
                "value": {
                    "glance": {
                        "vcenter_username": "",
                        "datacenter": "",
                        "datastore": "",
                        "vcenter_password": "",
                        "vcenter_host": ""
                    },
                    "availability_zones": [
                        {
                            "vcenter_username": "",
                            "az_name": "vcenter",
                            "vcenter_password": "",
                            "nova_computes": [
                                {
                                    "datastore_regex": "",
                                    "service_name": "",
                                    "vsphere_cluster": "",
                                    "target_node": {
                                        "current": {
                                            "id": "controllers",
                                            "label": "controllers"
                                        },
                                        "options": [
                                            {
                                                "id": "controllers",
                                                "label": "controllers"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "vcenter_host": ""
                        }
                    ]
                },
                "metadata": [
                    {
                        "fields": [
                            {
                                "regex": {
                                    "source": "^(?!nova$)\\w+$",
                                    "error": "Invalid availability zone name"
                                },
                                "type": "text",
                                "description": "Availability zone name",
                                "name": "az_name",
                                "label": "Availability zone"
                            },
                            {
                                "regex": {
                                    "source": "^[a-zA-Z\\d]+[-\\.\\da-zA-Z]*$",
                                    "error": "Invalid vCenter host"
                                },
                                "type": "text",
                                "description": "vCenter host or IP",
                                "name": "vcenter_host",
                                "label": "vCenter host"
                            },
                            {
                                "regex": {
                                    "source": "\\S",
                                    "error": "Empty vCenter username"
                                },
                                "type": "text",
                                "description": "vCenter username",
                                "name": "vcenter_username",
                                "label": "vCenter username"
                            },
                            {
                                "regex": {
                                    "source": "\\S",
                                    "error": "Empty vCenter password"
                                },
                                "type": "password",
                                "description": "vCenter password",
                                "name": "vcenter_password",
                                "label": "vCenter password"
                            },
                            {
                                "fields": [
                                    {
                                        "regex": {
                                            "source": "\\S",
                                            "error": "Invalid vSphere cluster"
                                        },
                                        "type": "text",
                                        "description": "vSphere cluster",
                                        "name": "vsphere_cluster",
                                        "label": "vSphere cluster"
                                    },
                                    {
                                        "regex": {
                                            "source": "^\\w[\\w\\-]+$",
                                            "error": "Invalid service name"
                                        },
                                        "type": "text",
                                        "description": "Service name",
                                        "name": "service_name",
                                        "label": "Service name"
                                    },
                                    {
                                        "regex": {
                                            "source": "\\S",
                                            "error": "Invalid datastore regex"
                                        },
                                        "type": "text",
                                        "description": "Datastore regex",
                                        "name": "datastore_regex",
                                        "label": "Datastore regex"
                                    },
                                    {
                                        "type": "select",
                                        "description": "Target node for nova-compute service",
                                        "name": "target_node",
                                        "label": "Target node"
                                    }
                                ],
                                "editable_for_deployed": true,
                                "name": "nova_computes",
                                "type": "array"
                            }
                        ],
                        "type": "array",
                        "name": "availability_zones",
                        "restrictions": [
                            {
                                "message": "VMware vCenter not enabled for cluster",
                                "condition": "settings:common.use_vcenter.value == false"
                            }
                        ]
                    },
                    {
                        "fields": [
                            {
                                "regex": {
                                    "source": "^[a-zA-Z\\d]+[-\\.\\da-zA-Z]*$",
                                    "error": "Invalid vCenter host"
                                },
                                "type": "text",
                                "description": "vCenter host or IP",
                                "name": "vcenter_host",
                                "label": "vCenter host"
                            },
                            {
                                "regex": {
                                    "source": "\\S",
                                    "error": "Empty vCenter username"
                                },
                                "type": "text",
                                "description": "vCenter username",
                                "name": "vcenter_username",
                                "label": "vCenter username"
                            },
                            {
                                "regex": {
                                    "source": "\\S",
                                    "error": "Empty vCenter password"
                                },
                                "type": "password",
                                "description": "vCenter password",
                                "name": "vcenter_password",
                                "label": "vCenter password"
                            },
                            {
                                "regex": {
                                    "source": "\\S",
                                    "error": "Invalid datacenter"
                                },
                                "type": "text",
                                "description": "Datacenter",
                                "name": "datacenter",
                                "label": "Datacenter"
                            },
                            {
                                "regex": {
                                    "source": "\\S",
                                    "error": "Invalid datastore"
                                },
                                "type": "text",
                                "description": "Datastore",
                                "name": "datastore",
                                "label": "Datastore"
                            }
                        ],
                        "type": "object",
                        "name": "glance",
                        "restrictions": [
                            {
                                "message": "VMware vCenter datastore for images is not enabled in Settings tab",
                                "condition": "settings:storage.images_vcenter.value == false or settings:common.use_vcenter.value == false"
                            }
                        ]
                    }
                ]
            }
        },
        "modes_metadata": {
            "ha_compact": {
                "description": "This configuration Deploys OpenStack ready for high availability (HA). Controller services are prepared for HA by setting up a base MySQL/Galera, RabbitMQ and HAProxy so that additional controllers can be deployed NOW, or scaled out LATER. 3 or more controllers are required for a true HA environment."
            }
        },
        "id": 2,
        "attributes_metadata": {
            "generated": {
                "glance_glare": {
                    "user_password": {
                        "generator": "password"
                    }
                },
                "murano-cfapi": {
                    "db_password": {
                        "generator": "password"
                    },
                    "user_password": {
                        "generator": "password"
                    },
                    "rabbit_password": {
                        "generator": "password"
                    }
                },
                "sahara": {
                    "db_password": {
                        "generator": "password"
                    },
                    "user_password": {
                        "generator": "password"
                    }
                },
                "mysql": {
                    "root_password": {
                        "generator": "password"
                    },
                    "wsrep_password": {
                        "generator": "password"
                    }
                },
                "ironic": {
                    "swift_tempurl_key": {
                        "generator": "password"
                    },
                    "db_password": {
                        "generator": "password"
                    },
                    "user_password": {
                        "generator": "password"
                    }
                },
                "glance": {
                    "db_password": {
                        "generator": "password"
                    },
                    "user_password": {
                        "generator": "password"
                    }
                },
                "cobbler": {
                    "profile": {
                        "generator": "identical",
                        "generator_arg": "ubuntu_1404_x86_64"
                    }
                },
                "quantum_settings": {
                    "metadata": {
                        "metadata_proxy_shared_secret": {
                            "generator": "password"
                        }
                    },
                    "keystone": {
                        "admin_password": {
                            "generator": "password"
                        }
                    },
                    "database": {
                        "passwd": {
                            "generator": "password"
                        }
                    }
                },
                "swift": {
                    "user_password": {
                        "generator": "password"
                    }
                },
                "aodh": {
                    "db_password": {
                        "generator": "password"
                    },
                    "user_password": {
                        "generator": "password"
                    }
                },
                "nova": {
                    "db_password": {
                        "generator": "password"
                    },
                    "user_password": {
                        "generator": "password"
                    },
                    "state_path": "/var/lib/nova"
                },
                "murano": {
                    "db_password": {
                        "generator": "password"
                    },
                    "user_password": {
                        "generator": "password"
                    },
                    "rabbit_password": {
                        "generator": "password"
                    }
                },
                "keystone": {
                    "db_password": {
                        "generator": "password"
                    },
                    "admin_token": {
                        "generator": "password"
                    }
                },
                "repo_setup": {
                    "installer_kernel": {
                        "local": "/var/www/nailgun/ubuntu/x86_64/images/linux",
                        "remote_relative": "dists/trusty/main/installer-amd64/current/images/netboot/ubuntu-installer/amd64/linux"
                    },
                    "installer_initrd": {
                        "local": "/var/www/nailgun/ubuntu/x86_64/images/initrd.gz",
                        "remote_relative": "dists/trusty/main/installer-amd64/current/images/netboot/ubuntu-installer/amd64/initrd.gz"
                    }
                },
                "heat": {
                    "db_password": {
                        "generator": "password"
                    },
                    "user_password": {
                        "generator": "password"
                    },
                    "auth_encryption_key": {
                        "generator": "hexstring",
                        "generator_arg": "32"
                    },
                    "rabbit_password": {
                        "generator": "password"
                    }
                },
                "rabbit": {
                    "password": {
                        "generator": "password"
                    }
                },
                "cinder": {
                    "db_password": {
                        "generator": "password"
                    },
                    "user_password": {
                        "generator": "password"
                    },
                    "fixed_key": {
                        "generator": "hexstring",
                        "generator_arg": "64"
                    }
                },
                "provision": {
                    "image_data": {
                        "/boot": {
                            "container": "gzip",
                            "uri": "http://{settings.MASTER_IP}:8080/targetimages/env_{cluster.id}_ubuntu_1404_amd64-boot.img.gz",
                            "format": "ext2"
                        },
                        "/": {
                            "container": "gzip",
                            "uri": "http://{settings.MASTER_IP}:8080/targetimages/env_{cluster.id}_ubuntu_1404_amd64.img.gz",
                            "format": "ext4"
                        }
                    },
                    "codename": "trusty"
                },
                "base_syslog": {
                    "syslog_port": {
                        "generator": "identical",
                        "generator_arg": "514"
                    },
                    "syslog_server": {
                        "generator": "ip",
                        "generator_arg": "admin"
                    }
                },
                "ceilometer": {
                    "db_password": {
                        "generator": "password"
                    },
                    "user_password": {
                        "generator": "password"
                    },
                    "metering_secret": {
                        "generator": "password"
                    }
                },
                "deployed_before": {
                    "value": false
                },
                "horizon": {
                    "secret_key": {
                        "generator": "hexstring",
                        "generator_arg": "64"
                    }
                },
                "puppet": {
                    "modules": "rsync://{settings.MASTER_IP}:/puppet/{cluster.release.version}/modules/",
                    "manifests": "rsync://{settings.MASTER_IP}:/puppet/{cluster.release.version}/manifests/"
                }
            },
            "editable": {
                "service_user": {
                    "homedir": {
                        "type": "hidden",
                        "value": "/var/lib/fuel"
                    },
                    "sudo": {
                        "type": "hidden",
                        "value": "ALL=(ALL) NOPASSWD: ALL"
                    },
                    "name": {
                        "type": "hidden",
                        "value": "fuel"
                    },
                    "root_password": {
                        "type": "hidden",
                        "value": "r00tme"
                    },
                    "password": {
                        "type": "hidden",
                        "value": {
                            "generator": "password"
                        }
                    },
                    "metadata": {
                        "restrictions": [
                            {
                                "action": "hide",
                                "condition": "true"
                            }
                        ],
                        "group": "general",
                        "weight": 10,
                        "label": "Service user account"
                    }
                },
                "operator_user": {
                    "name": {
                        "regex": {
                            "source": "\\S",
                            "error": "Empty username"
                        },
                        "description": "Username for operator user",
                        "weight": 50,
                        "value": "fueladmin",
                        "label": "Username",
                        "type": "text"
                    },
                    "sudo": {
                        "weight": 90,
                        "type": "textarea",
                        "description": "Sudoers configuration directives for operator user, one per line.",
                        "value": "ALL=(ALL) NOPASSWD: ALL",
                        "label": "Sudoers configuration"
                    },
                    "homedir": {
                        "regex": {
                            "source": "^/\\S",
                            "error": "Invalid path"
                        },
                        "description": "Home directory for operator user",
                        "weight": 70,
                        "value": "/home/fueladmin",
                        "label": "Home directory",
                        "type": "text"
                    },
                    "password": {
                        "regex": {
                            "source": "\\S",
                            "error": "Empty password"
                        },
                        "description": "Password for operator user",
                        "weight": 60,
                        "value": {
                            "generator": "password"
                        },
                        "label": "Password",
                        "type": "password"
                    },
                    "authkeys": {
                        "weight": 80,
                        "type": "textarea",
                        "description": "Public SSH keys to include to operator user's authorized keys, one per line.",
                        "value": "",
                        "label": "Authorized SSH keys"
                    },
                    "metadata": {
                        "group": "general",
                        "weight": 15,
                        "label": "Operating System Access"
                    }
                },
                "repo_setup": {
                    "repos": {
                        "type": "custom_repo_configuration",
                        "description": "Please note: the first repository will be considered the operating system mirror that will be used during node provisioning.\nTo create a local repository mirror on the Fuel master node, please follow the instructions provided by running \"fuel-createmirror --help\" on the Fuel master node.\nPlease make sure your Fuel master node has Internet access to the repository before attempting to create a mirror.\nFor more details, please refer to the documentation (https://docs.mirantis.com/openstack/fuel/fuel-9.0/operations.html#external-ubuntu-ops).\n",
                        "value": [
                            {
                                "name": "ubuntu-0",
                                "section": "main universe multiverse",
                                "uri": "http://mirror-pkgs.vm.mirantis.net/ubuntu-2016-03-29-170322",
                                "priority": 1001,
                                "suite": "trusty",
                                "type": "deb"
                            },
                            {
                                "name": "ubuntu-1",
                                "section": "main universe multiverse",
                                "uri": "http://mirror-pkgs.vm.mirantis.net/ubuntu-2016-03-29-170322",
                                "priority": 1001,
                                "suite": "trusty-updates",
                                "type": "deb"
                            },
                            {
                                "name": "ubuntu-2",
                                "section": "main universe multiverse",
                                "uri": "http://mirror-pkgs.vm.mirantis.net/ubuntu-2016-03-29-170322",
                                "priority": 1001,
                                "suite": "trusty-security",
                                "type": "deb"
                            },
                            {
                                "name": "ubuntu-3",
                                "section": "main universe multiverse",
                                "uri": "http://mirror-pkgs.vm.mirantis.net/ubuntu-2016-03-29-170322",
                                "priority": 1001,
                                "suite": "trusty-proposed",
                                "type": "deb"
                            },
                            {
                                "name": "mos",
                                "section": "main restricted",
                                "uri": "http://{settings.MASTER_IP}:8080/{cluster.release.version}/ubuntu/x86_64",
                                "priority": 1050,
                                "suite": "mos9.0",
                                "type": "deb"
                            },
                            {
                                "name": "mos-updates",
                                "section": "main restricted",
                                "uri": "http://mirror.fuel-infra.org/mos-repos/ubuntu/{cluster.release.environment_version}/",
                                "priority": 1050,
                                "suite": "mos9.0-updates",
                                "type": "deb"
                            },
                            {
                                "name": "mos-security",
                                "section": "main restricted",
                                "uri": "http://mirror.fuel-infra.org/mos-repos/ubuntu/{cluster.release.environment_version}/",
                                "priority": 1050,
                                "suite": "mos9.0-security",
                                "type": "deb"
                            },
                            {
                                "name": "mos-holdback",
                                "section": "main restricted",
                                "uri": "http://mirror.fuel-infra.org/mos-repos/ubuntu/{cluster.release.environment_version}/",
                                "priority": 1100,
                                "suite": "mos9.0-holdback",
                                "type": "deb"
                            },
                            {
                                "name": "Auxiliary",
                                "section": "main restricted",
                                "uri": "http://{settings.MASTER_IP}:8080/{cluster.release.version}/ubuntu/auxiliary",
                                "priority": 1150,
                                "suite": "auxiliary",
                                "type": "deb"
                            }
                        ],
                        "extra_priority": null
                    },
                    "metadata": {
                        "group": "general",
                        "always_editable": true,
                        "weight": 50,
                        "label": "Repositories"
                    }
                },
                "cgroups": {
                    "metadata": {
                        "restrictions": [
                            {
                                "action": "hide",
                                "condition": "true"
                            }
                        ],
                        "group": "general",
                        "always_editable": true,
                        "weight": 90,
                        "label": "Cgroups conguration for services"
                    }
                },
                "common": {
                    "use_vcenter": {
                        "type": "hidden",
                        "weight": 30,
                        "value": false
                    },
                    "auto_assign_floating_ip": {
                        "restrictions": [
                            {
                                "action": "hide",
                                "condition": "cluster:net_provider == 'neutron'"
                            }
                        ],
                        "group": "network",
                        "description": "If selected, OpenStack will automatically assign a floating IP to a new instance",
                        "weight": 40,
                        "value": false,
                        "label": "Auto assign floating IP",
                        "type": "checkbox"
                    },
                    "task_deploy": {
                        "weight": 11,
                        "type": "hidden",
                        "description": "The new deployment engine based on cross-node dependencies for deployment tasks.",
                        "value": true,
                        "label": "Enable task based deploy"
                    },
                    "auth_key": {
                        "group": "security",
                        "description": "Public key(s) to include in authorized_keys on deployed nodes",
                        "weight": 70,
                        "value": "",
                        "label": "Public Key",
                        "type": "hidden"
                    },
                    "puppet_debug": {
                        "group": "logging",
                        "description": "Debug puppet logging mode provides more information, but requires more disk space.",
                        "weight": 20,
                        "value": true,
                        "label": "Puppet debug logging",
                        "type": "checkbox"
                    },
                    "libvirt_type": {
                        "group": "compute",
                        "weight": 30,
                        "value": "qemu",
                        "label": "Hypervisor type",
                        "values": [
                            {
                                "data": "kvm",
                                "description": "Choose this type of hypervisor if you run OpenStack on hardware",
                                "label": "KVM"
                            },
                            {
                                "data": "qemu",
                                "description": "Choose this type of hypervisor if you run OpenStack on virtual hosts.",
                                "label": "QEMU"
                            }
                        ],
                        "type": "radio"
                    },
                    "resume_guests_state_on_host_boot": {
                        "group": "compute",
                        "description": "Whether to resume previous guests state when the host reboots. If enabled, this option causes guests assigned to the host to resume their previous state. If the guest was running a restart will be attempted when nova-compute starts. If the guest was not running previously, a restart will not be attempted.",
                        "weight": 50,
                        "value": true,
                        "label": "Resume guests state on host boot",
                        "type": "checkbox"
                    },
                    "debug": {
                        "group": "logging",
                        "description": "Debug logging mode provides more information, but requires more disk space.",
                        "weight": 20,
                        "value": false,
                        "label": "OpenStack debug logging",
                        "type": "checkbox"
                    },
                    "use_cow_images": {
                        "group": "storage",
                        "description": "For most cases you will want qcow format. If it's disabled, raw image format will be used to run VMs. OpenStack with raw format currently does not support snapshotting.",
                        "weight": 60,
                        "value": true,
                        "label": "Use qcow format for images",
                        "type": "checkbox"
                    },
                    "nova_quota": {
                        "group": "compute",
                        "description": "Quotas are used to limit CPU and memory usage for tenants. Enabling quotas will increase load on the Nova database.",
                        "weight": 30,
                        "value": false,
                        "label": "Nova quotas",
                        "type": "checkbox"
                    },
                    "metadata": {
                        "weight": 10,
                        "label": "Common"
                    }
                },
                "public_network_assignment": {
                    "assign_to_all_nodes": {
                        "weight": 10,
                        "type": "checkbox",
                        "description": "When disabled, public network will be assigned to controllers only",
                        "value": false,
                        "label": "Assign public network to all nodes"
                    },
                    "metadata": {
                        "restrictions": [
                            {
                                "action": "hide",
                                "condition": "cluster:net_provider != 'neutron'"
                            }
                        ],
                        "group": "network",
                        "weight": 10,
                        "label": "Public network assignment"
                    }
                },
                "storage": {
                    "volumes_ceph": {
                        "restrictions": [
                            "settings:storage.volumes_lvm.value == true or settings:storage.volumes_block_device.value == true"
                        ],
                        "description": "Configures Cinder to store volumes in Ceph RBD images.",
                        "weight": 20,
                        "value": false,
                        "label": "Ceph RBD for volumes (Cinder)",
                        "type": "checkbox"
                    },
                    "objects_ceph": {
                        "weight": 80,
                        "type": "checkbox",
                        "description": "Configures RadosGW front end for Ceph RBD. This exposes S3 and Swift API Interfaces. If enabled, this option will prevent Swift from installing.",
                        "value": false,
                        "label": "Ceph RadosGW for objects (Swift API)"
                    },
                    "bootstrap_osd_key": {
                        "type": "hidden",
                        "value": {
                            "generator": "cephx_key"
                        },
                        "label": "bootstrap_osd_key"
                    },
                    "volumes_lvm": {
                        "restrictions": [
                            "settings:storage.volumes_ceph.value == true"
                        ],
                        "description": "It is recommended to have at least one Cinder node.",
                        "weight": 10,
                        "value": true,
                        "label": "Cinder LVM over iSCSI for volumes",
                        "type": "checkbox"
                    },
                    "ephemeral_ceph": {
                        "weight": 75,
                        "type": "checkbox",
                        "description": "Configures Nova to store ephemeral volumes in RBD. This works best if Ceph is enabled for volumes and images, too. Enables live migration of all types of Ceph backed VMs (without this option, live migration will only work with VMs launched from Cinder volumes).",
                        "value": false,
                        "label": "Ceph RBD for ephemeral volumes (Nova)"
                    },
                    "volumes_block_device": {
                        "restrictions": [
                            "settings:storage.volumes_ceph.value == true"
                        ],
                        "description": "High performance block device storage. It is recommended to have at least one Cinder Block Device",
                        "weight": 15,
                        "value": false,
                        "label": "Cinder Block device driver",
                        "type": "checkbox"
                    },
                    "mon_key": {
                        "type": "hidden",
                        "value": {
                            "generator": "cephx_key"
                        },
                        "label": "mon_key"
                    },
                    "images_vcenter": {
                        "restrictions": [
                            {
                                "action": "hide",
                                "condition": "settings:common.use_vcenter.value != true"
                            },
                            {
                                "message": "Only one Glance backend could be selected.",
                                "condition": "settings:storage.images_ceph.value == true"
                            }
                        ],
                        "description": "Configures Glance to use the vCenter/ESXi backend to store images. If enabled, this option will prevent Swift from installing.",
                        "weight": 35,
                        "value": false,
                        "label": "VMware vCenter/ESXi datastore for images (Glance)",
                        "type": "checkbox"
                    },
                    "osd_pool_size": {
                        "regex": {
                            "source": "^[1-9]\\d*$",
                            "error": "Invalid number"
                        },
                        "description": "Configures the default number of object replicas in Ceph. This number must be equal to or lower than the number of deployed 'Ceph OSD' nodes.",
                        "weight": 85,
                        "value": "3",
                        "label": "Ceph object replication factor",
                        "type": "text"
                    },
                    "admin_key": {
                        "type": "hidden",
                        "value": {
                            "generator": "cephx_key"
                        },
                        "label": "admin_key"
                    },
                    "images_ceph": {
                        "restrictions": [
                            {
                                "settings:storage.images_vcenter.value == true": "Only one Glance backend could be selected."
                            }
                        ],
                        "description": "Configures Glance to use the Ceph RBD backend to store images. If enabled, this option will prevent Swift from installing.",
                        "weight": 30,
                        "value": false,
                        "label": "Ceph RBD for images (Glance)",
                        "type": "checkbox"
                    },
                    "radosgw_key": {
                        "type": "hidden",
                        "value": {
                            "generator": "cephx_key"
                        },
                        "label": "radosgw_key"
                    },
                    "fsid": {
                        "type": "hidden",
                        "value": {
                            "generator": "uuid4"
                        },
                        "label": "fsid"
                    },
                    "metadata": {
                        "group": "storage",
                        "weight": 60,
                        "label": "Storage Backends"
                    }
                },
                "public_ssl": {
                    "hostname": {
                        "restrictions": [
                            {
                                "action": "hide",
                                "condition": "settings:public_ssl.horizon.value == false and settings:public_ssl.services.value == false"
                            }
                        ],
                        "description": "Your DNS entries should point to this name. Self-signed certificates also will use this hostname",
                        "weight": 50,
                        "value": "public.fuel.local",
                        "label": "DNS hostname for public TLS endpoints",
                        "type": "text"
                    },
                    "horizon": {
                        "restrictions": [
                            {
                                "settings:public_ssl.services.value == false": "TLS for OpenStack public endpoints should be enabled"
                            }
                        ],
                        "description": "Secure access to Horizon enabling HTTPS instead of HTTP",
                        "weight": 20,
                        "value": false,
                        "label": "HTTPS for Horizon",
                        "type": "checkbox"
                    },
                    "services": {
                        "weight": 10,
                        "type": "checkbox",
                        "description": "Enable TLS termination on HAProxy for OpenStack services",
                        "value": false,
                        "label": "TLS for OpenStack public endpoints"
                    },
                    "cert_data": {
                        "restrictions": [
                            {
                                "action": "hide",
                                "condition": "(settings:public_ssl.cert_source.value != 'user_uploaded') or (settings:public_ssl.horizon.value == false and settings:public_ssl.services.value == false)"
                            }
                        ],
                        "description": "Certificate and private key data, concatenated into a single file",
                        "weight": 40,
                        "value": "",
                        "label": "Certificate",
                        "type": "file"
                    },
                    "cert_source": {
                        "restrictions": [
                            {
                                "action": "hide",
                                "condition": "settings:public_ssl.horizon.value == false and settings:public_ssl.services.value == false"
                            }
                        ],
                        "description": "From where we'll get certificate and private key",
                        "weight": 30,
                        "value": "self_signed",
                        "label": "Select source for certificate",
                        "values": [
                            {
                                "data": "self_signed",
                                "description": "Generate private key and certificate that will be signed by this key",
                                "label": "Self-signed"
                            },
                            {
                                "data": "user_uploaded",
                                "description": "Use pre-generated key and certificate",
                                "label": "I have my own keypair with certificate"
                            }
                        ],
                        "type": "radio"
                    },
                    "metadata": {
                        "group": "security",
                        "weight": 110,
                        "label": "Public TLS"
                    }
                },
                "access": {
                    "email": {
                        "regex": {
                            "source": "^\\S+@\\S+$",
                            "error": "Invalid email"
                        },
                        "description": "Email address for Administrator",
                        "weight": 40,
                        "value": "admin@localhost",
                        "label": "Email",
                        "type": "text"
                    },
                    "password": {
                        "regex": {
                            "source": "\\S",
                            "error": "Empty password"
                        },
                        "description": "Password for Administrator",
                        "weight": 20,
                        "value": "admin",
                        "label": "Password",
                        "type": "password"
                    },
                    "user": {
                        "regex": {
                            "source": "^(?!services$)(?!nova$)(?!glance$)(?!keystone$)(?!neutron$)(?!cinder$)(?!swift$)(?!ceph$)(?!ironic$)(?![Gg]uest$)(?!.* +.*$).+",
                            "error": "Invalid username"
                        },
                        "description": "Username for Administrator",
                        "weight": 10,
                        "value": "admin",
                        "label": "Username",
                        "type": "text"
                    },
                    "tenant": {
                        "regex": {
                            "source": "^(?!services$)(?!nova$)(?!glance$)(?!keystone$)(?!neutron$)(?!cinder$)(?!swift$)(?!ceph$)(?!ironic$)(?![Gg]uest$)(?!.* +.*$).+",
                            "error": "Invalid tenant name"
                        },
                        "description": "Tenant (project) name for Administrator",
                        "weight": 30,
                        "value": "admin",
                        "label": "Tenant",
                        "type": "text"
                    },
                    "metadata": {
                        "group": "general",
                        "weight": 10,
                        "label": "OpenStack Access"
                    }
                },
                "syslog": {
                    "syslog_port": {
                        "regex": {
                            "source": "^([1-9][0-9]{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$",
                            "error": "Invalid syslog port"
                        },
                        "description": "Remote syslog port",
                        "weight": 20,
                        "value": "514",
                        "label": "Port",
                        "type": "text"
                    },
                    "syslog_transport": {
                        "values": [
                            {
                                "data": "udp",
                                "description": "",
                                "label": "UDP"
                            },
                            {
                                "data": "tcp",
                                "description": "",
                                "label": "TCP"
                            }
                        ],
                        "type": "radio",
                        "weight": 30,
                        "value": "tcp",
                        "label": "Syslog transport protocol"
                    },
                    "syslog_server": {
                        "regex": {
                            "source": "^[a-zA-Z\\d]+[-\\.\\da-zA-Z]*$",
                            "error": "Invalid hostname"
                        },
                        "description": "Remote syslog hostname",
                        "weight": 10,
                        "value": "",
                        "label": "Hostname",
                        "type": "text"
                    },
                    "metadata": {
                        "group": "logging",
                        "enabled": false,
                        "weight": 50,
                        "toggleable": true,
                        "label": "Syslog"
                    }
                },
                "additional_components": {
                    "ceilometer": {
                        "weight": 60,
                        "type": "checkbox",
                        "description": "If selected, Ceilometer and Aodh components will be installed",
                        "value": false,
                        "label": "Install Ceilometer and Aodh"
                    },
                    "mongo": {
                        "restrictions": [
                            "settings:additional_components.ceilometer.value == false"
                        ],
                        "description": "If selected, You can use external Mongo DB as ceilometer backend",
                        "weight": 70,
                        "value": false,
                        "label": "Use external Mongo DB",
                        "type": "checkbox"
                    },
                    "heat": {
                        "weight": 50,
                        "type": "hidden",
                        "description": "",
                        "value": true,
                        "label": ""
                    },
                    "murano-cfapi": {
                        "restrictions": [
                            {
                                "message": "Murano should be enabled",
                                "condition": "settings:additional_components.murano.value == false"
                            },
                            {
                                "action": "hide",
                                "condition": "not ('experimental' in version:feature_groups)"
                            }
                        ],
                        "description": "If selected, Murano service broker will be installed",
                        "weight": 30,
                        "value": false,
                        "label": "Install Murano service broker for Cloud Foundry",
                        "type": "checkbox"
                    },
                    "murano": {
                        "weight": 20,
                        "type": "checkbox",
                        "description": "If selected, Murano component will be installed",
                        "value": false,
                        "label": "Install Murano"
                    },
                    "murano_glance_artifacts_plugin": {
                        "restrictions": [
                            {
                                "message": "Murano should be enabled",
                                "condition": "settings:additional_components.murano.value == false"
                            },
                            {
                                "action": "hide",
                                "condition": "not ('experimental' in version:feature_groups)"
                            }
                        ],
                        "description": "If selected glance artifact repository will be enabled",
                        "weight": 40,
                        "value": false,
                        "label": "Enable glance artifact repository",
                        "type": "checkbox"
                    },
                    "sahara": {
                        "weight": 10,
                        "type": "checkbox",
                        "description": "If selected, Sahara component will be installed",
                        "value": false,
                        "label": "Install Sahara"
                    },
                    "ironic": {
                        "restrictions": [
                            {
                                "cluster:net_provider != 'neutron' or networking_parameters:segmentation_type != 'vlan'": "Ironic requires Neutron with VLAN segmentation."
                            },
                            {
                                "settings:storage.images_ceph.value == true and settings:storage.objects_ceph.value == false": "Ironic requires Swift or RadosGW for Glance images."
                            }
                        ],
                        "description": "If selected, Ironic component will be installed",
                        "weight": 80,
                        "value": false,
                        "label": "Install Ironic",
                        "type": "checkbox"
                    },
                    "metadata": {
                        "group": "openstack_services",
                        "weight": 20,
                        "label": "Additional Components"
                    }
                },
                "murano_settings": {
                    "murano_repo_url": {
                        "weight": 10,
                        "type": "text",
                        "description": "",
                        "value": "http://storage.apps.openstack.org/",
                        "label": "Murano Repository URL"
                    },
                    "metadata": {
                        "restrictions": [
                            {
                                "action": "hide",
                                "message": "Murano is not enabled on the Additional Components section",
                                "condition": "settings:additional_components.murano.value == false"
                            }
                        ],
                        "group": "openstack_services",
                        "weight": 20,
                        "label": "Murano Settings"
                    }
                },
                "external_mongo": {
                    "mongo_db_name": {
                        "regex": {
                            "source": "^\\w+$",
                            "error": "Invalid database name"
                        },
                        "description": "Mongo database name",
                        "weight": 30,
                        "value": "ceilometer",
                        "label": "Database name",
                        "type": "text"
                    },
                    "mongo_replset": {
                        "weight": 30,
                        "type": "text",
                        "description": "Name for Mongo replication set",
                        "value": "",
                        "label": "Replset"
                    },
                    "mongo_user": {
                        "regex": {
                            "source": "^\\w+$",
                            "error": "Empty username"
                        },
                        "description": "Mongo database username",
                        "weight": 30,
                        "value": "ceilometer",
                        "label": "Username",
                        "type": "text"
                    },
                    "metadata": {
                        "restrictions": [
                            {
                                "action": "hide",
                                "message": "Ceilometer and MongoDB are not enabled on the Additional Components section",
                                "condition": "settings:additional_components.mongo.value == false"
                            }
                        ],
                        "group": "openstack_services",
                        "weight": 20,
                        "label": "External MongoDB"
                    },
                    "mongo_password": {
                        "regex": {
                            "source": "^\\S*$",
                            "error": "Password contains spaces"
                        },
                        "description": "Mongo database password",
                        "weight": 30,
                        "value": "ceilometer",
                        "label": "Password",
                        "type": "password"
                    },
                    "hosts_ip": {
                        "regex": {
                            "source": "^(((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?),)*((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
                            "error": "Invalid hosts ip sequence"
                        },
                        "description": "IP Addresses of MongoDB. Use comma to split IPs",
                        "weight": 30,
                        "value": "",
                        "label": "MongoDB hosts IP",
                        "type": "text"
                    }
                },
                "external_dns": {
                    "dns_list": {
                        "regex": {
                            "source": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
                            "error": "Invalid IP address"
                        },
                        "description": "List of upstream DNS servers",
                        "weight": 10,
                        "max": 3,
                        "value": {
                            "generator": "from_settings",
                            "generator_arg": "DNS_UPSTREAM"
                        },
                        "label": "DNS list",
                        "type": "text_list"
                    },
                    "metadata": {
                        "group": "network",
                        "weight": 30,
                        "label": "Host OS DNS Servers"
                    }
                },
                "workloads_collector": {
                    "password": {
                        "type": "password",
                        "value": {
                            "generator": "password"
                        }
                    },
                    "enabled": {
                        "type": "hidden",
                        "value": true
                    },
                    "user": {
                        "type": "text",
                        "value": "fuel_stats_user"
                    },
                    "tenant": {
                        "type": "text",
                        "value": "services"
                    },
                    "metadata": {
                        "restrictions": [
                            {
                                "action": "hide",
                                "condition": "true"
                            }
                        ],
                        "group": "general",
                        "weight": 10,
                        "label": "Workloads Collector User"
                    }
                },
                "kernel_params": {
                    "kernel": {
                        "type": "text",
                        "description": "Default kernel parameters",
                        "value": "console=tty0 net.ifnames=0 biosdevname=0 rootdelay=90 nomodeset",
                        "label": "Initial parameters"
                    },
                    "metadata": {
                        "group": "general",
                        "weight": 60,
                        "label": "Kernel parameters"
                    }
                },
                "provision": {
                    "packages": {
                        "type": "textarea",
                        "weight": 10,
                        "value": "acl\nanacron\nbash-completion\nbridge-utils\nbsdmainutils\nbuild-essential\ncloud-init\ncurl\ndaemonize\ndebconf-utils\ngdisk\ngrub-pc\nhpsa-dkms\nhwloc\ni40e-dkms\nlinux-firmware\nlinux-firmware-nonfree\nlinux-headers-generic-lts-trusty\nlinux-image-generic-lts-trusty\nlvm2\nmcollective\nmdadm\nmultipath-tools\nmultipath-tools-boot\nnailgun-agent\nnailgun-mcagents\nnetwork-checker\nntp\nopenssh-client\nopenssh-server\npuppet\npython-amqp\nruby-augeas\nruby-ipaddress\nruby-json\nruby-netaddr\nruby-openstack\nruby-shadow\nruby-stomp\ntelnet\nubuntu-minimal\nubuntu-standard\nuuid-runtime\nvim\nvirt-what\nvlan\n",
                        "label": "Initial packages"
                    },
                    "method": {
                        "type": "hidden",
                        "value": "image"
                    },
                    "metadata": {
                        "restrictions": [
                            {
                                "action": "hide",
                                "condition": "false"
                            }
                        ],
                        "group": "general",
                        "weight": 80,
                        "label": "Provision"
                    }
                },
                "external_ntp": {
                    "ntp_list": {
                        "regex": {
                            "source": "^[a-zA-Z\\d]+[-\\.\\da-zA-Z]*$",
                            "error": "Invalid NTP server"
                        },
                        "description": "List of upstream NTP servers",
                        "weight": 10,
                        "value": {
                            "generator": "from_settings",
                            "generator_arg": "NTP_UPSTREAM"
                        },
                        "label": "NTP server list",
                        "type": "text_list"
                    },
                    "metadata": {
                        "group": "network",
                        "weight": 40,
                        "label": "Host OS NTP Servers"
                    }
                },
                "corosync": {
                    "verified": {
                        "weight": 10,
                        "type": "checkbox",
                        "description": "Set True only if multicast is configured correctly on router.",
                        "value": false,
                        "label": "Need to pass network verification."
                    },
                    "group": {
                        "weight": 10,
                        "type": "text",
                        "description": "",
                        "value": "226.94.1.1",
                        "label": "Group"
                    },
                    "port": {
                        "weight": 20,
                        "type": "text",
                        "description": "",
                        "value": "12000",
                        "label": "Port"
                    },
                    "metadata": {
                        "restrictions": [
                            {
                                "action": "hide",
                                "condition": "true"
                            }
                        ],
                        "group": "general",
                        "weight": 50,
                        "label": "Corosync"
                    }
                },
                "neutron_advanced_configuration": {
                    "neutron_qos": {
                        "weight": 40,
                        "type": "checkbox",
                        "description": "Enable Neutron QoS advanced service plug-in",
                        "value": false,
                        "label": "Neutron QoS"
                    },
                    "neutron_l3_ha": {
                        "restrictions": [
                            {
                                "message": "Neutron DVR must be disabled in order to use Neutron L3 HA",
                                "condition": "settings:neutron_advanced_configuration.neutron_dvr.value == true"
                            }
                        ],
                        "description": "Enable High Availability features for Virtual Routers in Neutron\nRequires at least 2 Controller nodes to function properly\n",
                        "weight": 30,
                        "value": false,
                        "label": "Neutron L3 HA",
                        "type": "checkbox"
                    },
                    "neutron_dvr": {
                        "restrictions": [
                            {
                                "networking_parameters:segmentation_type != 'vlan' and settings:neutron_advanced_configuration.neutron_l2_pop.value == false": "DVR requires L2 population to be enabled."
                            }
                        ],
                        "description": "Enable Distributed Virtual Routers in Neutron",
                        "weight": 20,
                        "value": false,
                        "label": "Neutron DVR",
                        "type": "checkbox"
                    },
                    "neutron_l2_pop": {
                        "restrictions": [
                            {
                                "action": "hide",
                                "condition": "networking_parameters:segmentation_type == 'vlan'"
                            }
                        ],
                        "description": "Enable L2 population mechanism in Neutron",
                        "weight": 10,
                        "value": false,
                        "label": "Neutron L2 population",
                        "type": "checkbox"
                    },
                    "metadata": {
                        "restrictions": [
                            {
                                "action": "hide",
                                "condition": "cluster:net_provider != 'neutron'"
                            }
                        ],
                        "group": "network",
                        "weight": 20,
                        "label": "Neutron Advanced Configuration"
                    }
                }
            }
        },
        "name": "Liberty on Ubuntu 14.04"
    },
    "sahara": {
        "db_password": "0xS02J0fLc0VtubLNyPnkz6b",
        "user_password": "8kxSDOTMsOVCtrvc1eqbh56R",
        "enabled": false
    },
    "deployment_id": 1,
    "metadata": {
        "weight": 10,
        "label": "Common"
    },
    "quantum": true
}}
