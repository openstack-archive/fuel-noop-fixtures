anchor { 'nova-start' :
}

class { 'Mysql::Bindings::Python' :
}

class { 'Mysql::Bindings' :
}

class { 'Mysql::Params' :
}

class { 'Mysql::Python' :
  package_ensure => 'present',
  package_name   => 'python-mysqldb',
}

class { 'Nova::Compute::Ironic' :
  admin_passwd      => 'BnjNRET8AjjYSYiUFKQd8MiT',
  admin_password    => 'ironic',
  admin_tenant_name => 'services',
  admin_url         => 'http://192.168.0.2:35357/v2.0',
  admin_user        => 'ironic',
  admin_username    => 'admin',
  api_endpoint      => 'http://192.168.0.2:6385/v1',
  compute_driver    => 'ironic.IronicDriver',
}

class { 'Nova::Compute' :
  compute_manager                    => 'nova.compute.manager.ComputeManager',
  default_availability_zone          => 'nova',
  enabled                            => true,
  ensure_package                     => 'installed',
  force_config_drive                 => false,
  force_raw_images                   => true,
  heal_instance_info_cache_interval  => '60',
  install_bridge_utils               => true,
  instance_usage_audit               => false,
  instance_usage_audit_period        => 'month',
  internal_service_availability_zone => 'internal',
  manage_service                     => true,
  neutron_enabled                    => true,
  reserved_host_memory               => '0',
  virtio_nic                         => false,
  vnc_enabled                        => false,
  vnc_keymap                         => 'en-us',
  vncproxy_host                      => false,
  vncproxy_path                      => '/vnc_auto.html',
  vncproxy_port                      => '6080',
  vncproxy_protocol                  => 'http',
  vncserver_proxyclient_address      => '127.0.0.1',
}

class { 'Nova::Db' :
  require => [ Class[Mysql::Bindings], Class[Mysql::Bindings::Python] ],
}

class { 'Nova::Network::Neutron' :
  dhcp_domain                     => 'novalocal',
  firewall_driver                 => 'nova.virt.firewall.NoopFirewallDriver',
  network_api_class               => 'nova.network.neutronv2.api.API',
  neutron_admin_auth_url          => 'http://192.168.0.2:35357/v2.0',
  neutron_admin_password          => 'XzCvbGgI0KfqgoHYGXPTkTgY',
  neutron_admin_tenant_name       => 'services',
  neutron_admin_username          => 'neutron',
  neutron_auth_strategy           => 'keystone',
  neutron_default_tenant_id       => 'default',
  neutron_extension_sync_interval => '600',
  neutron_ovs_bridge              => 'br-int',
  neutron_region_name             => 'RegionOne',
  neutron_url                     => 'http://192.168.0.2:9696',
  neutron_url_timeout             => '30',
  security_group_api              => 'neutron',
  vif_plugging_is_fatal           => true,
  vif_plugging_timeout            => '300',
}

class { 'Nova::Params' :
}

class { 'Nova' :
  amqp_durable_queues                => false,
  auth_strategy                      => 'keystone',
  ca_file                            => false,
  cert_file                          => false,
  database_connection                => 'mysql://nova:HyPHllrMCyYPLDhhT93Cs7TJ@192.168.0.2/nova?read_timeout=60',
  database_idle_timeout              => '3600',
  debug                              => false,
  enabled_ssl_apis                   => [ 'ec2', 'metadata', 'osapi_compute' ],
  ensure_package                     => 'installed',
  glance_api_servers                 => '192.168.0.2:9292',
  image_service                      => 'nova.image.glance.GlanceImageService',
  install_utilities                  => false,
  key_file                           => false,
  kombu_reconnect_delay              => '1.0',
  kombu_ssl_version                  => 'TLSv1',
  lock_path                          => '/var/lock/nova',
  log_dir                            => '/var/log/nova',
  log_facility                       => 'LOG_LOCAL6',
  memcached_servers                  => '192.168.0.3:11211',
  notification_topics                => 'notifications',
  notify_api_faults                  => false,
  notify_on_state_change             => 'vm_and_task_state',
  periodic_interval                  => '60',
  qpid_heartbeat                     => '60',
  qpid_hostname                      => 'localhost',
  qpid_password                      => 'guest',
  qpid_port                          => '5672',
  qpid_protocol                      => 'tcp',
  qpid_sasl_mechanisms               => false,
  qpid_tcp_nodelay                   => true,
  qpid_username                      => 'guest',
  rabbit_heartbeat_rate              => '2',
  rabbit_heartbeat_timeout_threshold => '0',
  rabbit_host                        => 'localhost',
  rabbit_hosts                       => '192.168.0.3:5673',
  rabbit_password                    => 'OLCrvt99FgutnBs63PeFJchF',
  rabbit_port                        => '5672',
  rabbit_use_ssl                     => false,
  rabbit_userid                      => 'nova',
  rabbit_virtual_host                => '/',
  report_interval                    => '60',
  rootwrap_config                    => '/etc/nova/rootwrap.conf',
  rpc_backend                        => 'nova.openstack.common.rpc.impl_kombu',
  service_down_time                  => '180',
  slave_connection                   => false,
  state_path                         => '/var/lib/nova',
  use_ssl                            => false,
  use_stderr                         => true,
  use_syslog                         => true,
  verbose                            => true,
}

exec { 'networking-refresh' :
  command     => '/sbin/ifdown -a ; /sbin/ifup -a',
  refreshonly => true,
}

exec { 'post-nova_config' :
  command     => '/bin/echo "Nova config has changed"',
  notify      => 'Service[nova-compute]',
  refreshonly => true,
}

file { '/etc/nova/nova-compute.conf' :
  content => '[DEFAULT]
host=ironic-compute',
  notify  => 'Service[nova-compute]',
  require => Package[nova-compute],
}

file { '/etc/nova/nova.conf' :
  group   => 'nova',
  mode    => '0640',
  owner   => 'nova',
  require => Package[nova-common],
}

file { '/var/log/nova' :
  ensure  => 'directory',
  group   => 'adm',
  mode    => '0750',
  owner   => 'nova',
  require => Package[nova-common],
}

nova::generic_service { 'compute' :
  before         => Exec[networking-refresh],
  enabled        => true,
  ensure_package => 'installed',
  manage_service => true,
  package_name   => 'nova-compute',
  service_name   => 'nova-compute',
}

nova_config { 'DEFAULT/amqp_durable_queues' :
  notify => 'Exec[post-nova_config]',
  value  => false,
}

nova_config { 'DEFAULT/auth_strategy' :
  notify => 'Exec[post-nova_config]',
  value  => 'keystone',
}

nova_config { 'DEFAULT/compute_driver' :
  notify => 'Exec[post-nova_config]',
  value  => 'ironic.IronicDriver',
}

nova_config { 'DEFAULT/compute_manager' :
  notify => 'Exec[post-nova_config]',
  value  => 'nova.compute.manager.ComputeManager',
}

nova_config { 'DEFAULT/debug' :
  notify => 'Exec[post-nova_config]',
  value  => false,
}

nova_config { 'DEFAULT/default_availability_zone' :
  notify => 'Exec[post-nova_config]',
  value  => 'nova',
}

nova_config { 'DEFAULT/dhcp_domain' :
  notify => 'Exec[post-nova_config]',
  value  => 'novalocal',
}

nova_config { 'DEFAULT/enabled_ssl_apis' :
  ensure => 'absent',
  notify => 'Exec[post-nova_config]',
}

nova_config { 'DEFAULT/firewall_driver' :
  notify => 'Exec[post-nova_config]',
  value  => 'nova.virt.firewall.NoopFirewallDriver',
}

nova_config { 'DEFAULT/force_config_drive' :
  ensure => 'absent',
  notify => 'Exec[post-nova_config]',
}

nova_config { 'DEFAULT/force_raw_images' :
  notify => 'Exec[post-nova_config]',
  value  => true,
}

nova_config { 'DEFAULT/heal_instance_info_cache_interval' :
  notify => 'Exec[post-nova_config]',
  value  => '60',
}

nova_config { 'DEFAULT/image_service' :
  notify => 'Exec[post-nova_config]',
  value  => 'nova.image.glance.GlanceImageService',
}

nova_config { 'DEFAULT/instance_usage_audit' :
  ensure => 'absent',
  notify => 'Exec[post-nova_config]',
}

nova_config { 'DEFAULT/instance_usage_audit_period' :
  ensure => 'absent',
  notify => 'Exec[post-nova_config]',
}

nova_config { 'DEFAULT/internal_service_availability_zone' :
  notify => 'Exec[post-nova_config]',
  value  => 'internal',
}

nova_config { 'DEFAULT/lock_path' :
  notify => 'Exec[post-nova_config]',
  value  => '/var/lock/nova',
}

nova_config { 'DEFAULT/log_dir' :
  notify => 'Exec[post-nova_config]',
  value  => '/var/log/nova',
}

nova_config { 'DEFAULT/memcached_servers' :
  notify => 'Exec[post-nova_config]',
  value  => '192.168.0.3:11211',
}

nova_config { 'DEFAULT/network_api_class' :
  notify => 'Exec[post-nova_config]',
  value  => 'nova.network.neutronv2.api.API',
}

nova_config { 'DEFAULT/network_device_mtu' :
  ensure => 'absent',
  notify => 'Exec[post-nova_config]',
}

nova_config { 'DEFAULT/notification_driver' :
  ensure => 'absent',
  notify => 'Exec[post-nova_config]',
}

nova_config { 'DEFAULT/notification_topics' :
  notify => 'Exec[post-nova_config]',
  value  => 'notifications',
}

nova_config { 'DEFAULT/notify_api_faults' :
  notify => 'Exec[post-nova_config]',
  value  => false,
}

nova_config { 'DEFAULT/notify_on_state_change' :
  notify => 'Exec[post-nova_config]',
  value  => 'vm_and_task_state',
}

nova_config { 'DEFAULT/os_region_name' :
  ensure => 'absent',
  notify => 'Exec[post-nova_config]',
}

nova_config { 'DEFAULT/report_interval' :
  notify => 'Exec[post-nova_config]',
  value  => '60',
}

nova_config { 'DEFAULT/reserved_host_memory_mb' :
  notify => 'Exec[post-nova_config]',
  value  => '0',
}

nova_config { 'DEFAULT/rootwrap_config' :
  notify => 'Exec[post-nova_config]',
  value  => '/etc/nova/rootwrap.conf',
}

nova_config { 'DEFAULT/rpc_backend' :
  notify => 'Exec[post-nova_config]',
  value  => 'nova.openstack.common.rpc.impl_kombu',
}

nova_config { 'DEFAULT/security_group_api' :
  notify => 'Exec[post-nova_config]',
  value  => 'neutron',
}

nova_config { 'DEFAULT/service_down_time' :
  notify => 'Exec[post-nova_config]',
  value  => '180',
}

nova_config { 'DEFAULT/ssl_ca_file' :
  ensure => 'absent',
  notify => 'Exec[post-nova_config]',
}

nova_config { 'DEFAULT/ssl_cert_file' :
  ensure => 'absent',
  notify => 'Exec[post-nova_config]',
}

nova_config { 'DEFAULT/ssl_key_file' :
  ensure => 'absent',
  notify => 'Exec[post-nova_config]',
}

nova_config { 'DEFAULT/state_path' :
  notify => 'Exec[post-nova_config]',
  value  => '/var/lib/nova',
}

nova_config { 'DEFAULT/syslog_log_facility' :
  notify => 'Exec[post-nova_config]',
  value  => 'LOG_LOCAL6',
}

nova_config { 'DEFAULT/use_stderr' :
  notify => 'Exec[post-nova_config]',
  value  => true,
}

nova_config { 'DEFAULT/use_syslog' :
  notify => 'Exec[post-nova_config]',
  value  => true,
}

nova_config { 'DEFAULT/verbose' :
  notify => 'Exec[post-nova_config]',
  value  => true,
}

nova_config { 'DEFAULT/vif_plugging_is_fatal' :
  notify => 'Exec[post-nova_config]',
  value  => true,
}

nova_config { 'DEFAULT/vif_plugging_timeout' :
  notify => 'Exec[post-nova_config]',
  value  => '300',
}

nova_config { 'DEFAULT/vnc_enabled' :
  notify => 'Exec[post-nova_config]',
  value  => false,
}

nova_config { 'DEFAULT/vnc_keymap' :
  notify => 'Exec[post-nova_config]',
  value  => 'en-us',
}

nova_config { 'DEFAULT/vncserver_proxyclient_address' :
  notify => 'Exec[post-nova_config]',
  value  => '127.0.0.1',
}

nova_config { 'cinder/os_region_name' :
  ensure => 'absent',
  notify => 'Exec[post-nova_config]',
}

nova_config { 'database/connection' :
  notify => 'Exec[post-nova_config]',
  secret => true,
  value  => 'mysql://nova:HyPHllrMCyYPLDhhT93Cs7TJ@192.168.0.2/nova?read_timeout=60',
}

nova_config { 'database/idle_timeout' :
  notify => 'Exec[post-nova_config]',
  value  => '3600',
}

nova_config { 'database/slave_connection' :
  ensure => 'absent',
  notify => 'Exec[post-nova_config]',
}

nova_config { 'glance/api_servers' :
  notify => 'Exec[post-nova_config]',
  value  => '192.168.0.2:9292',
}

nova_config { 'ironic/admin_password' :
  notify => 'Exec[post-nova_config]',
  value  => 'BnjNRET8AjjYSYiUFKQd8MiT',
}

nova_config { 'ironic/admin_tenant_name' :
  notify => 'Exec[post-nova_config]',
  value  => 'services',
}

nova_config { 'ironic/admin_url' :
  notify => 'Exec[post-nova_config]',
  value  => 'http://192.168.0.2:35357/v2.0',
}

nova_config { 'ironic/admin_username' :
  notify => 'Exec[post-nova_config]',
  value  => 'ironic',
}

nova_config { 'ironic/api_endpoint' :
  notify => 'Exec[post-nova_config]',
  value  => 'http://192.168.0.2:6385/v1',
}

nova_config { 'neutron/admin_auth_url' :
  notify => 'Exec[post-nova_config]',
  value  => 'http://192.168.0.2:35357/v2.0',
}

nova_config { 'neutron/admin_password' :
  notify => 'Exec[post-nova_config]',
  secret => true,
  value  => 'XzCvbGgI0KfqgoHYGXPTkTgY',
}

nova_config { 'neutron/admin_tenant_name' :
  notify => 'Exec[post-nova_config]',
  value  => 'services',
}

nova_config { 'neutron/admin_username' :
  notify => 'Exec[post-nova_config]',
  value  => 'neutron',
}

nova_config { 'neutron/auth_strategy' :
  notify => 'Exec[post-nova_config]',
  value  => 'keystone',
}

nova_config { 'neutron/ca_certificates_file' :
  ensure => 'absent',
  notify => 'Exec[post-nova_config]',
}

nova_config { 'neutron/default_tenant_id' :
  notify => 'Exec[post-nova_config]',
  value  => 'default',
}

nova_config { 'neutron/extension_sync_interval' :
  notify => 'Exec[post-nova_config]',
  value  => '600',
}

nova_config { 'neutron/ovs_bridge' :
  notify => 'Exec[post-nova_config]',
  value  => 'br-int',
}

nova_config { 'neutron/region_name' :
  notify => 'Exec[post-nova_config]',
  value  => 'RegionOne',
}

nova_config { 'neutron/timeout' :
  notify => 'Exec[post-nova_config]',
  value  => '30',
}

nova_config { 'neutron/url' :
  notify => 'Exec[post-nova_config]',
  value  => 'http://192.168.0.2:9696',
}

nova_config { 'oslo_messaging_rabbit/heartbeat_rate' :
  notify => 'Exec[post-nova_config]',
  value  => '2',
}

nova_config { 'oslo_messaging_rabbit/heartbeat_timeout_threshold' :
  notify => 'Exec[post-nova_config]',
  value  => '0',
}

nova_config { 'oslo_messaging_rabbit/kombu_reconnect_delay' :
  notify => 'Exec[post-nova_config]',
  value  => '1.0',
}

nova_config { 'oslo_messaging_rabbit/kombu_ssl_ca_certs' :
  ensure => 'absent',
  notify => 'Exec[post-nova_config]',
}

nova_config { 'oslo_messaging_rabbit/kombu_ssl_certfile' :
  ensure => 'absent',
  notify => 'Exec[post-nova_config]',
}

nova_config { 'oslo_messaging_rabbit/kombu_ssl_keyfile' :
  ensure => 'absent',
  notify => 'Exec[post-nova_config]',
}

nova_config { 'oslo_messaging_rabbit/kombu_ssl_version' :
  ensure => 'absent',
  notify => 'Exec[post-nova_config]',
}

nova_config { 'oslo_messaging_rabbit/rabbit_ha_queues' :
  notify => 'Exec[post-nova_config]',
  value  => true,
}

nova_config { 'oslo_messaging_rabbit/rabbit_hosts' :
  notify => 'Exec[post-nova_config]',
  value  => '192.168.0.3:5673',
}

nova_config { 'oslo_messaging_rabbit/rabbit_password' :
  notify => 'Exec[post-nova_config]',
  secret => true,
  value  => 'OLCrvt99FgutnBs63PeFJchF',
}

nova_config { 'oslo_messaging_rabbit/rabbit_use_ssl' :
  notify => 'Exec[post-nova_config]',
  value  => false,
}

nova_config { 'oslo_messaging_rabbit/rabbit_userid' :
  notify => 'Exec[post-nova_config]',
  value  => 'nova',
}

nova_config { 'oslo_messaging_rabbit/rabbit_virtual_host' :
  notify => 'Exec[post-nova_config]',
  value  => '/',
}

package { 'nova-common' :
  ensure  => 'installed',
  name    => 'nova-common',
  require => [ Package[python-nova], Anchor[nova-start] ],
  tag     => [ 'openstack', 'nova-package' ],
}

package { 'nova-compute' :
  ensure => 'installed',
  before => [ 'Service[nova-compute]', 'Service[nova-compute]' ],
  name   => 'nova-compute',
  notify => Service[nova-compute],
  tag    => [ 'openstack', 'nova-package' ],
}

package { 'pm-utils' :
  ensure => 'present',
}

package { 'python-greenlet' :
  ensure => 'present',
}

package { 'python-mysqldb' :
  ensure => 'present',
  name   => 'python-mysqldb',
}

package { 'python-nova' :
  ensure  => 'installed',
  require => Package[python-greenlet],
  tag     => 'openstack',
}

service { 'nova-compute' :
  ensure    => 'running',
  enable    => true,
  hasstatus => true,
  name      => 'nova-compute',
  require   => Package[nova-common],
  tag       => 'nova-service',
}

stage { 'main' :
}

