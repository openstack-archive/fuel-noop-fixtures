class { 'Keystone::Params' :
}

class { 'Keystone::Python' :
  ensure              => 'present',
  client_package_name => 'python-keystone',
}

class { 'Mysql::Bindings::Python' :
}

class { 'Mysql::Bindings' :
}

class { 'Mysql::Params' :
}

class { 'Mysql::Python' :
  package_ensure => 'present',
  package_name   => 'python-mysqldb',
}

class { 'Neutron::Db' :
  database_connection     => 'sqlite:////var/lib/neutron/ovs.sqlite',
  database_idle_timeout   => '3600',
  database_max_overflow   => '20',
  database_max_pool_size  => '10',
  database_max_retries    => '10',
  database_min_pool_size  => '1',
  database_retry_interval => '10',
  require                 => [ Class[Mysql::Bindings], Class[Mysql::Bindings::Python] ],
}

class { 'Neutron::Params' :
}

class { 'Neutron::Policy' :
  notify      => 'Service[neutron-server]',
  policies    => {  },
  policy_path => '/etc/neutron/policy.json',
}

class { 'Neutron::Server::Notifications' :
  auth_plugin                        => 'password',
  auth_url                           => 'http://192.168.0.7:35357/',
  notify_nova_on_port_data_changes   => true,
  notify_nova_on_port_status_changes => true,
  nova_admin_auth_url                => 'http://127.0.0.1:35357/v2.0',
  nova_admin_password                => false,
  nova_admin_tenant_name             => 'services',
  nova_admin_username                => 'nova',
  nova_url                           => 'http://192.168.0.7:8774/v2',
  password                           => 'fuhtZH6v',
  project_domain_id                  => 'default',
  project_name                       => 'services',
  region_name                        => 'RegionOne',
  send_events_interval               => '2',
  tenant_name                        => 'services',
  user_domain_id                     => 'default',
  username                           => 'nova',
}

class { 'Neutron::Server' :
  agent_down_time                  => '30',
  allow_automatic_l3agent_failover => false,
  api_workers                      => '6',
  auth_admin_prefix                => false,
  auth_host                        => 'localhost',
  auth_password                    => 'XgdPodA7',
  auth_port                        => '35357',
  auth_protocol                    => 'http',
  auth_region                      => 'RegionOne',
  auth_tenant                      => 'services',
  auth_type                        => 'keystone',
  auth_uri                         => 'http://192.168.0.7:5000/',
  auth_user                        => 'neutron',
  database_connection              => 'mysql://neutron:zOXpcc6c@192.168.0.7/neutron?&read_timeout=60',
  database_max_retries             => '-1',
  database_retry_interval          => '2',
  enabled                          => false,
  identity_uri                     => 'http://192.168.0.7:5000/',
  l3_ha                            => true,
  l3_ha_net_cidr                   => '169.254.192.0/18',
  manage_service                   => true,
  max_l3_agents_per_router         => '0',
  min_l3_agents_per_router         => '2',
  package_ensure                   => 'present',
  qos_notification_drivers         => 'message_queue',
  require                          => Class[Keystone::Python],
  router_distributed               => false,
  router_scheduler_driver          => 'neutron.scheduler.l3_agent_scheduler.ChanceScheduler',
  rpc_workers                      => '6',
  sync_db                          => false,
}

class { 'Neutron' :
}

exec { 'remove_neutron-server_override' :
  before  => 'Service[neutron-server]',
  command => 'rm -f /etc/init/neutron-server.override',
  onlyif  => 'test -f /etc/init/neutron-server.override',
  path    => [ '/sbin', '/bin', '/usr/bin', '/usr/sbin' ],
}

file { 'create_neutron-server_override' :
  ensure  => 'present',
  before  => [ 'Package[neutron-server]', 'Package[neutron-server]', 'Exec[remove_neutron-server_override]' ],
  content => 'manual',
  group   => 'root',
  mode    => '0644',
  owner   => 'root',
  path    => '/etc/init/neutron-server.override',
}

neutron_api_config { 'filter:authtoken/admin_password' :
  notify => 'Service[neutron-server]',
  secret => true,
  value  => 'XgdPodA7',
}

neutron_api_config { 'filter:authtoken/admin_tenant_name' :
  notify => 'Service[neutron-server]',
  value  => 'services',
}

neutron_api_config { 'filter:authtoken/admin_user' :
  notify => 'Service[neutron-server]',
  value  => 'neutron',
}

neutron_api_config { 'filter:authtoken/auth_admin_prefix' :
  ensure => 'absent',
  notify => 'Service[neutron-server]',
}

neutron_api_config { 'filter:authtoken/auth_host' :
  ensure => 'absent',
  notify => 'Service[neutron-server]',
}

neutron_api_config { 'filter:authtoken/auth_port' :
  ensure => 'absent',
  notify => 'Service[neutron-server]',
}

neutron_api_config { 'filter:authtoken/auth_protocol' :
  ensure => 'absent',
  notify => 'Service[neutron-server]',
}

neutron_api_config { 'filter:authtoken/auth_uri' :
  notify => 'Service[neutron-server]',
  value  => 'http://192.168.0.7:5000/',
}

neutron_api_config { 'filter:authtoken/identity_uri' :
  notify => 'Service[neutron-server]',
  value  => 'http://192.168.0.7:5000/',
}

neutron_config { 'DEFAULT/agent_down_time' :
  notify => 'Service[neutron-server]',
  value  => '30',
}

neutron_config { 'DEFAULT/allow_automatic_l3agent_failover' :
  notify => 'Service[neutron-server]',
  value  => false,
}

neutron_config { 'DEFAULT/api_workers' :
  notify => 'Service[neutron-server]',
  value  => '6',
}

neutron_config { 'DEFAULT/l3_ha' :
  notify => 'Service[neutron-server]',
  value  => true,
}

neutron_config { 'DEFAULT/l3_ha_net_cidr' :
  notify => 'Service[neutron-server]',
  value  => '169.254.192.0/18',
}

neutron_config { 'DEFAULT/max_l3_agents_per_router' :
  notify => 'Service[neutron-server]',
  value  => '0',
}

neutron_config { 'DEFAULT/min_l3_agents_per_router' :
  notify => 'Service[neutron-server]',
  value  => '2',
}

neutron_config { 'DEFAULT/notify_nova_on_port_data_changes' :
  notify => 'Service[neutron-server]',
  value  => true,
}

neutron_config { 'DEFAULT/notify_nova_on_port_status_changes' :
  notify => 'Service[neutron-server]',
  value  => true,
}

neutron_config { 'DEFAULT/nova_region_name' :
  ensure => 'absent',
  notify => 'Service[neutron-server]',
}

neutron_config { 'DEFAULT/nova_url' :
  notify => 'Service[neutron-server]',
  value  => 'http://192.168.0.7:8774/v2',
}

neutron_config { 'DEFAULT/router_distributed' :
  notify => 'Service[neutron-server]',
  value  => false,
}

neutron_config { 'DEFAULT/router_scheduler_driver' :
  notify => 'Service[neutron-server]',
  value  => 'neutron.scheduler.l3_agent_scheduler.ChanceScheduler',
}

neutron_config { 'DEFAULT/rpc_workers' :
  notify => 'Service[neutron-server]',
  value  => '6',
}

neutron_config { 'DEFAULT/send_events_interval' :
  notify => 'Service[neutron-server]',
  value  => '2',
}

neutron_config { 'database/connection' :
  notify => 'Service[neutron-server]',
  secret => true,
  value  => 'mysql://neutron:zOXpcc6c@192.168.0.7/neutron?&read_timeout=60',
}

neutron_config { 'database/idle_timeout' :
  notify => 'Service[neutron-server]',
  value  => '3600',
}

neutron_config { 'database/max_overflow' :
  notify => 'Service[neutron-server]',
  value  => '20',
}

neutron_config { 'database/max_pool_size' :
  notify => 'Service[neutron-server]',
  value  => '10',
}

neutron_config { 'database/max_retries' :
  notify => 'Service[neutron-server]',
  value  => '-1',
}

neutron_config { 'database/min_pool_size' :
  notify => 'Service[neutron-server]',
  value  => '1',
}

neutron_config { 'database/retry_interval' :
  notify => 'Service[neutron-server]',
  value  => '2',
}

neutron_config { 'keystone_authtoken/admin_password' :
  notify => 'Service[neutron-server]',
  secret => true,
  value  => 'XgdPodA7',
}

neutron_config { 'keystone_authtoken/admin_tenant_name' :
  notify => 'Service[neutron-server]',
  value  => 'services',
}

neutron_config { 'keystone_authtoken/admin_user' :
  notify => 'Service[neutron-server]',
  value  => 'neutron',
}

neutron_config { 'keystone_authtoken/auth_admin_prefix' :
  ensure => 'absent',
  notify => 'Service[neutron-server]',
}

neutron_config { 'keystone_authtoken/auth_host' :
  ensure => 'absent',
  notify => 'Service[neutron-server]',
}

neutron_config { 'keystone_authtoken/auth_port' :
  ensure => 'absent',
  notify => 'Service[neutron-server]',
}

neutron_config { 'keystone_authtoken/auth_protocol' :
  ensure => 'absent',
  notify => 'Service[neutron-server]',
}

neutron_config { 'keystone_authtoken/auth_region' :
  notify => 'Service[neutron-server]',
  value  => 'RegionOne',
}

neutron_config { 'keystone_authtoken/auth_uri' :
  notify => 'Service[neutron-server]',
  value  => 'http://192.168.0.7:5000/',
}

neutron_config { 'keystone_authtoken/identity_uri' :
  notify => 'Service[neutron-server]',
  value  => 'http://192.168.0.7:5000/',
}

neutron_config { 'nova/auth_plugin' :
  notify => 'Service[neutron-server]',
  value  => 'password',
}

neutron_config { 'nova/auth_url' :
  notify => 'Service[neutron-server]',
  value  => 'http://192.168.0.7:35357/',
}

neutron_config { 'nova/password' :
  notify => 'Service[neutron-server]',
  secret => true,
  value  => 'fuhtZH6v',
}

neutron_config { 'nova/project_domain_id' :
  notify => 'Service[neutron-server]',
  value  => 'default',
}

neutron_config { 'nova/project_name' :
  notify => 'Service[neutron-server]',
  value  => 'services',
}

neutron_config { 'nova/region_name' :
  notify => 'Service[neutron-server]',
  value  => 'RegionOne',
}

neutron_config { 'nova/tenant_name' :
  notify => 'Service[neutron-server]',
  value  => 'services',
}

neutron_config { 'nova/user_domain_id' :
  notify => 'Service[neutron-server]',
  value  => 'default',
}

neutron_config { 'nova/username' :
  notify => 'Service[neutron-server]',
  value  => 'nova',
}

neutron_config { 'qos/notification_drivers' :
  notify => 'Service[neutron-server]',
  value  => 'message_queue',
}

override_resources { 'neutron_api_config' :
  data => { 'test/test' => { 'value' => '20' } },
}

override_resources { 'neutron_config' :
  data => { 'DEFAULT/debug' => { 'value' => true } },
}

package { 'neutron-server' :
  ensure => 'present',
  before => [ 'Neutron_api_config[filter:authtoken/admin_tenant_name]', 'Neutron_api_config[filter:authtoken/admin_user]', 'Neutron_api_config[filter:authtoken/admin_password]', 'Neutron_api_config[filter:authtoken/auth_admin_prefix]', 'Neutron_api_config[filter:authtoken/auth_host]', 'Neutron_api_config[filter:authtoken/auth_port]', 'Neutron_api_config[filter:authtoken/auth_protocol]', 'Neutron_api_config[filter:authtoken/auth_uri]', 'Neutron_api_config[filter:authtoken/identity_uri]', 'Neutron_config[database/connection]', 'Neutron_config[database/idle_timeout]', 'Neutron_config[database/min_pool_size]', 'Neutron_config[database/max_retries]', 'Neutron_config[database/retry_interval]', 'Neutron_config[database/max_pool_size]', 'Neutron_config[database/max_overflow]', 'Neutron_config[DEFAULT/l3_ha]', 'Neutron_config[DEFAULT/max_l3_agents_per_router]', 'Neutron_config[DEFAULT/min_l3_agents_per_router]', 'Neutron_config[DEFAULT/l3_ha_net_cidr]', 'Neutron_config[DEFAULT/api_workers]', 'Neutron_config[DEFAULT/rpc_workers]', 'Neutron_config[DEFAULT/agent_down_time]', 'Neutron_config[DEFAULT/router_scheduler_driver]', 'Neutron_config[DEFAULT/router_distributed]', 'Neutron_config[DEFAULT/allow_automatic_l3agent_failover]', 'Neutron_config[qos/notification_drivers]', 'Neutron_config[keystone_authtoken/admin_tenant_name]', 'Neutron_config[keystone_authtoken/admin_user]', 'Neutron_config[keystone_authtoken/admin_password]', 'Neutron_config[keystone_authtoken/auth_admin_prefix]', 'Neutron_config[keystone_authtoken/auth_host]', 'Neutron_config[keystone_authtoken/auth_port]', 'Neutron_config[keystone_authtoken/auth_protocol]', 'Neutron_config[keystone_authtoken/auth_uri]', 'Neutron_config[keystone_authtoken/auth_region]', 'Neutron_config[keystone_authtoken/identity_uri]', 'Neutron_config[nova/auth_plugin]', 'Neutron_config[nova/auth_url]', 'Neutron_config[nova/username]', 'Neutron_config[nova/password]', 'Neutron_config[nova/project_domain_id]', 'Neutron_config[nova/project_name]', 'Neutron_config[nova/user_domain_id]', 'Neutron_config[nova/tenant_name]', 'Neutron_config[DEFAULT/notify_nova_on_port_status_changes]', 'Neutron_config[DEFAULT/notify_nova_on_port_data_changes]', 'Neutron_config[DEFAULT/send_events_interval]', 'Neutron_config[DEFAULT/nova_url]', 'Neutron_config[DEFAULT/nova_region_name]', 'Neutron_config[nova/region_name]', 'Service[neutron-server]', 'Class[Neutron::Policy]', 'Exec[remove_neutron-server_override]', 'Exec[remove_neutron-server_override]' ],
  name   => 'neutron-server',
  tag    => [ 'openstack', 'neutron-package' ],
}

package { 'neutron' :
  ensure => 'installed',
  name   => 'binutils',
}

package { 'python-keystone' :
  ensure => 'present',
  name   => 'python-keystone',
}

package { 'python-mysqldb' :
  ensure => 'present',
  name   => 'python-mysqldb',
}

service { 'neutron-server' :
  ensure     => 'stopped',
  enable     => false,
  hasrestart => true,
  hasstatus  => true,
  require    => Class[Neutron],
  tag        => 'neutron-service',
}

stage { 'main' :
}

tweaks::ubuntu_service_override { 'neutron-server' :
  package_name => 'neutron-server',
  service_name => 'neutron-server',
}

