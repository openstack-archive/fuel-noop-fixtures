class { 'Neutron::Agents::Ml2::Ovs' :
  arp_responder              => false,
  bridge_mappings            => 'physnet2:br-prv',
  bridge_uplinks             => [  ],
  drop_flows_on_start        => false,
  enable_distributed_routing => false,
  enable_tunneling           => false,
  enabled                    => true,
  extensions                 => [  ],
  firewall_driver            => 'neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver',
  integration_bridge         => 'br-int',
  l2_population              => false,
  local_ip                   => false,
  manage_service             => true,
  manage_vswitch             => false,
  package_ensure             => 'present',
  polling_interval           => '2',
  prevent_arp_spoofing       => true,
  tunnel_bridge              => 'br-tun',
  tunnel_types               => [  ],
  vxlan_udp_port             => '4789',
}

class { 'Neutron::Params' :
}

class { 'Neutron::Plugins::Ml2' :
  enable_security_group     => true,
  extension_drivers         => 'port_security',
  flat_networks             => '*',
  mechanism_drivers         => [ 'openvswitch', 'l2population' ],
  network_vlan_ranges       => 'physnet2:1000:1030',
  package_ensure            => 'present',
  path_mtu                  => '1500',
  physical_network_mtus     => 'physnet2:1500',
  sriov_agent_required      => false,
  supported_pci_vendor_devs => [ '15b3:1004', '8086:10ca' ],
  tenant_network_types      => [ 'flat', 'vlan' ],
  tunnel_id_ranges          => [  ],
  type_drivers              => [ 'local', 'flat', 'vlan', 'gre', 'vxlan' ],
  vni_ranges                => [  ],
  vxlan_group               => '224.0.0.1',
}

class { 'Neutron' :
}

file { '/etc/default/neutron-server' :
  ensure => 'present',
  group  => 'root',
  mode   => '0644',
  owner  => 'root',
}

file { '/etc/neutron/plugin.ini' :
  ensure => 'link',
  target => '/etc/neutron/plugins/ml2/ml2_conf.ini',
}

neutron::plugins::ml2::mech_driver { 'l2population' :
  sriov_agent_required      => false,
  supported_pci_vendor_devs => [ '15b3:1004', '8086:10ca' ],
}

neutron::plugins::ml2::mech_driver { 'openvswitch' :
  sriov_agent_required      => false,
  supported_pci_vendor_devs => [ '15b3:1004', '8086:10ca' ],
}

neutron::plugins::ml2::type_driver { 'flat' :
  flat_networks       => '*',
  network_vlan_ranges => 'physnet2:1000:1030',
  tunnel_id_ranges    => [  ],
  vni_ranges          => [  ],
  vxlan_group         => '224.0.0.1',
}

neutron::plugins::ml2::type_driver { 'gre' :
  flat_networks       => '*',
  network_vlan_ranges => 'physnet2:1000:1030',
  tunnel_id_ranges    => [  ],
  vni_ranges          => [  ],
  vxlan_group         => '224.0.0.1',
}

neutron::plugins::ml2::type_driver { 'local' :
  flat_networks       => '*',
  network_vlan_ranges => 'physnet2:1000:1030',
  tunnel_id_ranges    => [  ],
  vni_ranges          => [  ],
  vxlan_group         => '224.0.0.1',
}

neutron::plugins::ml2::type_driver { 'vlan' :
  flat_networks       => '*',
  network_vlan_ranges => 'physnet2:1000:1030',
  tunnel_id_ranges    => [  ],
  vni_ranges          => [  ],
  vxlan_group         => '224.0.0.1',
}

neutron::plugins::ml2::type_driver { 'vxlan' :
  flat_networks       => '*',
  network_vlan_ranges => 'physnet2:1000:1030',
  tunnel_id_ranges    => [  ],
  vni_ranges          => [  ],
  vxlan_group         => '224.0.0.1',
}

neutron_agent_ovs { 'agent/arp_responder' :
  notify => 'Service[neutron-ovs-agent-service]',
  value  => false,
}

neutron_agent_ovs { 'agent/drop_flows_on_start' :
  notify => 'Service[neutron-ovs-agent-service]',
  value  => false,
}

neutron_agent_ovs { 'agent/enable_distributed_routing' :
  notify => 'Service[neutron-ovs-agent-service]',
  value  => false,
}

neutron_agent_ovs { 'agent/l2_population' :
  notify => 'Service[neutron-ovs-agent-service]',
  value  => false,
}

neutron_agent_ovs { 'agent/polling_interval' :
  notify => 'Service[neutron-ovs-agent-service]',
  value  => '2',
}

neutron_agent_ovs { 'agent/prevent_arp_spoofing' :
  notify => 'Service[neutron-ovs-agent-service]',
  value  => true,
}

neutron_agent_ovs { 'ovs/bridge_mappings' :
  notify => 'Service[neutron-ovs-agent-service]',
  value  => 'physnet2:br-prv',
}

neutron_agent_ovs { 'ovs/enable_tunneling' :
  notify => 'Service[neutron-ovs-agent-service]',
  value  => false,
}

neutron_agent_ovs { 'ovs/integration_bridge' :
  notify => 'Service[neutron-ovs-agent-service]',
  value  => 'br-int',
}

neutron_agent_ovs { 'ovs/local_ip' :
  ensure => 'absent',
  notify => 'Service[neutron-ovs-agent-service]',
}

neutron_agent_ovs { 'ovs/tunnel_bridge' :
  ensure => 'absent',
  notify => 'Service[neutron-ovs-agent-service]',
}

neutron_agent_ovs { 'securitygroup/firewall_driver' :
  notify => 'Service[neutron-ovs-agent-service]',
  value  => 'neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver',
}

neutron_plugin_ml2 { 'ml2/extension_drivers' :
  value => 'port_security',
}

neutron_plugin_ml2 { 'ml2/mechanism_drivers' :
  value => 'openvswitch,l2population',
}

neutron_plugin_ml2 { 'ml2/path_mtu' :
  value => '1500',
}

neutron_plugin_ml2 { 'ml2/physical_network_mtus' :
  value => 'physnet2:1500',
}

neutron_plugin_ml2 { 'ml2/tenant_network_types' :
  value => 'flat,vlan',
}

neutron_plugin_ml2 { 'ml2/type_drivers' :
  value => 'local,flat,vlan,gre,vxlan',
}

neutron_plugin_ml2 { 'ml2_type_flat/flat_networks' :
  value => '*',
}

neutron_plugin_ml2 { 'ml2_type_gre/tunnel_id_ranges' :
  value => '',
}

neutron_plugin_ml2 { 'ml2_type_vlan/network_vlan_ranges' :
  value => 'physnet2:1000:1030',
}

neutron_plugin_ml2 { 'ml2_type_vxlan/vni_ranges' :
  value => '',
}

neutron_plugin_ml2 { 'ml2_type_vxlan/vxlan_group' :
  value => '224.0.0.1',
}

neutron_plugin_ml2 { 'securitygroup/enable_security_group' :
  value => true,
}

override_resources { 'neutron_agent_ovs' :
  data => { 'agent/polling_interval' => { 'value' => '15' } },
}

override_resources { 'neutron_plugin_ml2' :
  data => { 'test/polling_interval' => { 'value' => '10' } },
}

package { 'neutron-ovs-agent' :
  ensure => 'present',
  before => 'Service[ovs-cleanup-service]',
  name   => 'openstack-neutron-openvswitch',
  notify => 'Service[neutron-ovs-agent-service]',
  tag    => [ 'openstack', 'neutron-package' ],
}

package { 'neutron-plugin-ml2' :
  ensure => 'present',
  before => [ 'File[/etc/neutron/plugin.ini]', 'File[/etc/default/neutron-server]' ],
  name   => 'openstack-neutron-ml2',
  tag    => 'openstack',
}

package { 'neutron' :
  ensure => 'installed',
  name   => 'binutils',
  notify => 'Service[neutron-ovs-agent-service]',
}

service { 'neutron-ovs-agent-service' :
  ensure  => 'running',
  enable  => true,
  name    => 'neutron-openvswitch-agent',
  require => Class[Neutron],
  tag     => 'neutron-service',
}

service { 'ovs-cleanup-service' :
  enable => true,
  name   => 'neutron-ovs-cleanup',
}

stage { 'main' :
}

