anchor { 'cinder-start' :
}

cinder::backend::rbd { 'DEFAULT' :
  extra_options                    => {  },
  rbd_ceph_conf                    => '/etc/ceph/ceph.conf',
  rbd_flatten_volume_from_snapshot => false,
  rbd_max_clone_depth              => '5',
  rbd_pool                         => 'volumes',
  rbd_secret_uuid                  => 'a5d0dd94-57c4-ae55-ffe0-7e3732a24455',
  rbd_user                         => 'volumes',
  volume_backend_name              => 'DEFAULT',
  volume_tmp_dir                   => false,
}

cinder_api_paste_ini { 'filter:authtoken/admin_password' :
  notify => [ 'Service[cinder-api]', 'Service[cinder-scheduler]', 'Service[cinder-volume]' ],
  secret => true,
  value  => 'sJRfG0GP',
}

cinder_api_paste_ini { 'filter:authtoken/admin_tenant_name' :
  notify => [ 'Service[cinder-api]', 'Service[cinder-scheduler]', 'Service[cinder-volume]' ],
  value  => 'services',
}

cinder_api_paste_ini { 'filter:authtoken/admin_user' :
  notify => [ 'Service[cinder-api]', 'Service[cinder-scheduler]', 'Service[cinder-volume]' ],
  value  => 'cinder',
}

cinder_api_paste_ini { 'filter:authtoken/auth_admin_prefix' :
  ensure => 'absent',
  notify => [ 'Service[cinder-api]', 'Service[cinder-scheduler]', 'Service[cinder-volume]' ],
}

cinder_api_paste_ini { 'filter:authtoken/auth_host' :
  ensure => 'absent',
  notify => [ 'Service[cinder-api]', 'Service[cinder-scheduler]', 'Service[cinder-volume]' ],
}

cinder_api_paste_ini { 'filter:authtoken/auth_port' :
  ensure => 'absent',
  notify => [ 'Service[cinder-api]', 'Service[cinder-scheduler]', 'Service[cinder-volume]' ],
}

cinder_api_paste_ini { 'filter:authtoken/auth_protocol' :
  ensure => 'absent',
  notify => [ 'Service[cinder-api]', 'Service[cinder-scheduler]', 'Service[cinder-volume]' ],
}

cinder_api_paste_ini { 'filter:authtoken/auth_uri' :
  notify => [ 'Service[cinder-api]', 'Service[cinder-scheduler]', 'Service[cinder-volume]' ],
  value  => 'http://192.168.0.7:5000/',
}

cinder_api_paste_ini { 'filter:authtoken/identity_uri' :
  notify => [ 'Service[cinder-api]', 'Service[cinder-scheduler]', 'Service[cinder-volume]' ],
  value  => 'http://192.168.0.7:5000/',
}

cinder_api_paste_ini { 'filter:authtoken/service_host' :
  ensure => 'absent',
  notify => [ 'Service[cinder-api]', 'Service[cinder-scheduler]', 'Service[cinder-volume]' ],
}

cinder_api_paste_ini { 'filter:authtoken/service_port' :
  ensure => 'absent',
  notify => [ 'Service[cinder-api]', 'Service[cinder-scheduler]', 'Service[cinder-volume]' ],
}

cinder_api_paste_ini { 'filter:authtoken/service_protocol' :
  ensure => 'absent',
  notify => [ 'Service[cinder-api]', 'Service[cinder-scheduler]', 'Service[cinder-volume]' ],
}

cinder_api_paste_ini { 'filter:ratelimit/limits' :
  notify => [ 'Service[cinder-api]', 'Service[cinder-scheduler]', 'Service[cinder-volume]' ],
  value  => { 'DELETE' => '100000', 'GET' => '100000', 'POST' => '100000', 'POST_SERVERS' => '100000', 'PUT' => '100000' },
}

cinder_api_paste_ini { 'filter:ratelimit/paste.filter_factory' :
  notify => [ 'Service[cinder-api]', 'Service[cinder-scheduler]', 'Service[cinder-volume]' ],
  value  => 'cinder.api.v1.limits:RateLimitingMiddleware.factory',
}

cinder_config { 'DEFAULT/amqp_durable_queues' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => false,
}

cinder_config { 'DEFAULT/api_paste_config' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '/etc/cinder/api-paste.ini',
}

cinder_config { 'DEFAULT/auth_strategy' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => 'keystone',
}

cinder_config { 'DEFAULT/backup_api_class' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => 'cinder.backup.api.API',
}

cinder_config { 'DEFAULT/backup_ceph_chunk_size' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '134217728',
}

cinder_config { 'DEFAULT/backup_ceph_conf' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '/etc/ceph/ceph.conf',
}

cinder_config { 'DEFAULT/backup_ceph_pool' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => 'backups',
}

cinder_config { 'DEFAULT/backup_ceph_stripe_count' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '0',
}

cinder_config { 'DEFAULT/backup_ceph_stripe_unit' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '0',
}

cinder_config { 'DEFAULT/backup_ceph_user' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => 'backups',
}

cinder_config { 'DEFAULT/backup_driver' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => 'cinder.backup.drivers.ceph',
}

cinder_config { 'DEFAULT/backup_manager' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => 'cinder.backup.manager.BackupManager',
}

cinder_config { 'DEFAULT/backup_name_template' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => 'backup-%s',
}

cinder_config { 'DEFAULT/backup_topic' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => 'cinder-backup',
}

cinder_config { 'DEFAULT/control_exchange' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => 'cinder',
}

cinder_config { 'DEFAULT/debug' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => false,
}

cinder_config { 'DEFAULT/default_availability_zone' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => 'nova',
}

cinder_config { 'DEFAULT/default_log_levels' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => 'amqp=WARN,amqplib=WARN,boto=WARN,iso8601=WARN,keystonemiddleware=WARN,oslo.messaging=INFO,oslo_messaging=INFO,qpid=WARN,requests.packages.urllib3.connectionpool=WARN,requests.packages.urllib3.util.retry=WARN,routes.middleware=WARN,sqlalchemy=WARN,stevedore=WARN,suds=INFO,taskflow=WARN,urllib3.connectionpool=WARN,urllib3.util.retry=WARN,websocket=WARN',
}

cinder_config { 'DEFAULT/default_volume_type' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '<SERVICE DEFAULT>',
}

cinder_config { 'DEFAULT/enable_v1_api' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => true,
}

cinder_config { 'DEFAULT/enable_v2_api' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => true,
}

cinder_config { 'DEFAULT/fatal_deprecations' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '<SERVICE DEFAULT>',
}

cinder_config { 'DEFAULT/glance_api_insecure' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => false,
}

cinder_config { 'DEFAULT/glance_api_servers' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '192.168.0.7:9292',
}

cinder_config { 'DEFAULT/glance_api_ssl_compression' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => false,
}

cinder_config { 'DEFAULT/glance_api_version' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '2',
}

cinder_config { 'DEFAULT/glance_num_retries' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '0',
}

cinder_config { 'DEFAULT/glance_request_timeout' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
}

cinder_config { 'DEFAULT/host' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => 'rbd:volumes',
}

cinder_config { 'DEFAULT/instance_format' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '<SERVICE DEFAULT>',
}

cinder_config { 'DEFAULT/instance_uuid_format' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '<SERVICE DEFAULT>',
}

cinder_config { 'DEFAULT/kombu_reconnect_delay' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '5.0',
}

cinder_config { 'DEFAULT/lock_path' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '/var/lib/cinder/tmp',
}

cinder_config { 'DEFAULT/log_config_append' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '<SERVICE DEFAULT>',
}

cinder_config { 'DEFAULT/log_date_format' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '<SERVICE DEFAULT>',
}

cinder_config { 'DEFAULT/log_dir' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '<SERVICE DEFAULT>',
}

cinder_config { 'DEFAULT/logging_context_format_string' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '<SERVICE DEFAULT>',
}

cinder_config { 'DEFAULT/logging_debug_format_suffix' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '<SERVICE DEFAULT>',
}

cinder_config { 'DEFAULT/logging_default_format_string' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '<SERVICE DEFAULT>',
}

cinder_config { 'DEFAULT/logging_exception_prefix' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '<SERVICE DEFAULT>',
}

cinder_config { 'DEFAULT/notification_driver' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => 'messagingv2',
}

cinder_config { 'DEFAULT/nova_catalog_admin_info' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => 'compute:nova:adminURL',
}

cinder_config { 'DEFAULT/nova_catalog_info' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => 'compute:nova:internalURL',
}

cinder_config { 'DEFAULT/os_privileged_user_auth_url' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => 'http://192.168.0.7:5000/v2.0/',
}

cinder_config { 'DEFAULT/os_privileged_user_name' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => 'cinder',
}

cinder_config { 'DEFAULT/os_privileged_user_password' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => 'sJRfG0GP',
}

cinder_config { 'DEFAULT/os_privileged_user_tenant' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => 'services',
}

cinder_config { 'DEFAULT/os_region_name' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => 'RegionOne',
}

cinder_config { 'DEFAULT/osapi_volume_listen' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '192.168.0.8',
}

cinder_config { 'DEFAULT/osapi_volume_workers' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '4',
}

cinder_config { 'DEFAULT/publish_errors' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '<SERVICE DEFAULT>',
}

cinder_config { 'DEFAULT/rbd_ceph_conf' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '/etc/ceph/ceph.conf',
}

cinder_config { 'DEFAULT/rbd_flatten_volume_from_snapshot' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => false,
}

cinder_config { 'DEFAULT/rbd_max_clone_depth' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '5',
}

cinder_config { 'DEFAULT/rbd_pool' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => 'volumes',
}

cinder_config { 'DEFAULT/rbd_secret_uuid' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => 'a5d0dd94-57c4-ae55-ffe0-7e3732a24455',
}

cinder_config { 'DEFAULT/rbd_user' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => 'volumes',
}

cinder_config { 'DEFAULT/rpc_backend' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => 'cinder.openstack.common.rpc.impl_kombu',
}

cinder_config { 'DEFAULT/scheduler_default_filters' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => 'AvailabilityZoneFilter,CapacityFilter,CapabilitiesFilter',
}

cinder_config { 'DEFAULT/scheduler_driver' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '<SERVICE DEFAULT>',
}

cinder_config { 'DEFAULT/ssl_ca_file' :
  ensure => 'absent',
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
}

cinder_config { 'DEFAULT/ssl_cert_file' :
  ensure => 'absent',
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
}

cinder_config { 'DEFAULT/ssl_key_file' :
  ensure => 'absent',
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
}

cinder_config { 'DEFAULT/storage_availability_zone' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => 'nova',
}

cinder_config { 'DEFAULT/syslog_log_facility' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => 'LOG_LOCAL3',
}

cinder_config { 'DEFAULT/use_stderr' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => false,
}

cinder_config { 'DEFAULT/use_syslog' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => true,
}

cinder_config { 'DEFAULT/use_syslog_rfc_format' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => true,
}

cinder_config { 'DEFAULT/verbose' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => true,
}

cinder_config { 'DEFAULT/volume_backend_name' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => 'DEFAULT',
}

cinder_config { 'DEFAULT/volume_driver' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => 'cinder.volume.drivers.rbd.RBDDriver',
}

cinder_config { 'DEFAULT/volume_tmp_dir' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => false,
}

cinder_config { 'database/connection' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  secret => true,
  value  => 'mysql://cinder:trj609V8@192.168.0.7/cinder?charset=utf8&read_timeout=60',
}

cinder_config { 'database/idle_timeout' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '3600',
}

cinder_config { 'database/max_overflow' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '20',
}

cinder_config { 'database/max_pool_size' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '20',
}

cinder_config { 'database/max_retries' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '-1',
}

cinder_config { 'database/min_pool_size' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '<SERVICE DEFAULT>',
}

cinder_config { 'database/retry_interval' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '<SERVICE DEFAULT>',
}

cinder_config { 'keystone_authtoken/admin_password' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => 'sJRfG0GP',
}

cinder_config { 'keystone_authtoken/admin_tenant_name' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => 'services',
}

cinder_config { 'keystone_authtoken/admin_user' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => 'cinder',
}

cinder_config { 'keystone_authtoken/auth_uri' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => 'http://192.168.0.7:5000/',
}

cinder_config { 'keystone_authtoken/identity_uri' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => 'http://192.168.0.7:5000/',
}

cinder_config { 'keystone_authtoken/signing_dir' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '/tmp/keystone-signing-cinder',
}

cinder_config { 'keystone_authtoken/signing_dirname' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '/tmp/keystone-signing-cinder',
}

cinder_config { 'oslo_messaging_rabbit/heartbeat_rate' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '2',
}

cinder_config { 'oslo_messaging_rabbit/heartbeat_timeout_threshold' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '0',
}

cinder_config { 'oslo_messaging_rabbit/kombu_ssl_ca_certs' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '<SERVICE DEFAULT>',
}

cinder_config { 'oslo_messaging_rabbit/kombu_ssl_certfile' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '<SERVICE DEFAULT>',
}

cinder_config { 'oslo_messaging_rabbit/kombu_ssl_keyfile' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '<SERVICE DEFAULT>',
}

cinder_config { 'oslo_messaging_rabbit/kombu_ssl_version' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '<SERVICE DEFAULT>',
}

cinder_config { 'oslo_messaging_rabbit/rabbit_ha_queues' :
  before => [ 'Service[cinder-api]', 'Service[cinder-volume]', 'Service[cinder-scheduler]' ],
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => true,
}

cinder_config { 'oslo_messaging_rabbit/rabbit_host' :
  ensure => 'absent',
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
}

cinder_config { 'oslo_messaging_rabbit/rabbit_hosts' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '192.168.0.8:5673, 192.168.0.3:5673',
}

cinder_config { 'oslo_messaging_rabbit/rabbit_password' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  secret => true,
  value  => '1GXPbTgb',
}

cinder_config { 'oslo_messaging_rabbit/rabbit_port' :
  ensure => 'absent',
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
}

cinder_config { 'oslo_messaging_rabbit/rabbit_use_ssl' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => false,
}

cinder_config { 'oslo_messaging_rabbit/rabbit_userid' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => 'nova',
}

cinder_config { 'oslo_messaging_rabbit/rabbit_virtual_host' :
  notify => [ 'Service[cinder-api]', 'Exec[cinder-manage db_sync]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  value  => '/',
}

class { 'Cinder::Api' :
  auth_uri                    => 'http://192.168.0.7:5000/',
  bind_host                   => '192.168.0.8',
  default_volume_type         => '<SERVICE DEFAULT>',
  enabled                     => true,
  identity_uri                => 'http://192.168.0.7:5000/',
  keystone_auth_admin_prefix  => false,
  keystone_auth_host          => 'localhost',
  keystone_auth_port          => '35357',
  keystone_auth_protocol      => 'http',
  keystone_auth_uri           => false,
  keystone_enabled            => true,
  keystone_password           => 'sJRfG0GP',
  keystone_tenant             => 'services',
  keystone_user               => 'cinder',
  manage_service              => true,
  nova_catalog_admin_info     => 'compute:nova:adminURL',
  nova_catalog_info           => 'compute:nova:internalURL',
  os_privileged_user_auth_url => 'http://192.168.0.7:5000/v2.0/',
  os_privileged_user_name     => 'cinder',
  os_privileged_user_password => 'sJRfG0GP',
  os_privileged_user_tenant   => 'services',
  os_region_name              => 'RegionOne',
  package_ensure              => 'installed',
  privileged_user             => true,
  ratelimits                  => { 'DELETE' => '100000', 'GET' => '100000', 'POST' => '100000', 'POST_SERVERS' => '100000', 'PUT' => '100000' },
  ratelimits_factory          => 'cinder.api.v1.limits:RateLimitingMiddleware.factory',
  service_port                => '5000',
  service_workers             => '4',
  sync_db                     => true,
  validate                    => false,
  validation_options          => {  },
}

class { 'Cinder::Backup::Ceph' :
  backup_ceph_chunk_size   => '134217728',
  backup_ceph_conf         => '/etc/ceph/ceph.conf',
  backup_ceph_pool         => 'backups',
  backup_ceph_stripe_count => '0',
  backup_ceph_stripe_unit  => '0',
  backup_ceph_user         => 'backups',
  backup_driver            => 'cinder.backup.drivers.ceph',
}

class { 'Cinder::Backup' :
  backup_api_class     => 'cinder.backup.api.API',
  backup_manager       => 'cinder.backup.manager.BackupManager',
  backup_name_template => 'backup-%s',
  backup_topic         => 'cinder-backup',
  enabled              => true,
  package_ensure       => 'present',
}

class { 'Cinder::Ceilometer' :
  notification_driver => 'messagingv2',
}

class { 'Cinder::Db::Sync' :
}

class { 'Cinder::Db' :
  database_connection     => 'sqlite:////var/lib/cinder/cinder.sqlite',
  database_idle_timeout   => '<SERVICE DEFAULT>',
  database_max_overflow   => '<SERVICE DEFAULT>',
  database_max_pool_size  => '<SERVICE DEFAULT>',
  database_max_retries    => '<SERVICE DEFAULT>',
  database_min_pool_size  => '<SERVICE DEFAULT>',
  database_retry_interval => '<SERVICE DEFAULT>',
  require                 => [ Class[Mysql::Bindings], Class[Mysql::Bindings::Python] ],
}

class { 'Cinder::Glance' :
  glance_api_insecure        => false,
  glance_api_servers         => '192.168.0.7:9292',
  glance_api_ssl_compression => false,
  glance_api_version         => '2',
  glance_num_retries         => '0',
}

class { 'Cinder::Logging' :
  default_log_levels            => { 'amqp' => 'WARN', 'amqplib' => 'WARN', 'boto' => 'WARN', 'iso8601' => 'WARN', 'keystonemiddleware' => 'WARN', 'oslo.messaging' => 'INFO', 'oslo_messaging' => 'INFO', 'qpid' => 'WARN', 'requests.packages.urllib3.connectionpool' => 'WARN', 'requests.packages.urllib3.util.retry' => 'WARN', 'routes.middleware' => 'WARN', 'sqlalchemy' => 'WARN', 'stevedore' => 'WARN', 'suds' => 'INFO', 'taskflow' => 'WARN', 'urllib3.connectionpool' => 'WARN', 'urllib3.util.retry' => 'WARN', 'websocket' => 'WARN' },
  fatal_deprecations            => '<SERVICE DEFAULT>',
  instance_format               => '<SERVICE DEFAULT>',
  instance_uuid_format          => '<SERVICE DEFAULT>',
  log_config_append             => '<SERVICE DEFAULT>',
  log_date_format               => '<SERVICE DEFAULT>',
  logging_context_format_string => '<SERVICE DEFAULT>',
  logging_debug_format_suffix   => '<SERVICE DEFAULT>',
  logging_default_format_string => '<SERVICE DEFAULT>',
  logging_exception_prefix      => '<SERVICE DEFAULT>',
  publish_errors                => '<SERVICE DEFAULT>',
}

class { 'Cinder::Params' :
}

class { 'Cinder::Policy' :
  notify      => 'Service[cinder-api]',
  policies    => {  },
  policy_path => '/etc/cinder/policy.json',
}

class { 'Cinder::Scheduler::Filter' :
  scheduler_default_filters => [ 'AvailabilityZoneFilter', 'CapacityFilter', 'CapabilitiesFilter' ],
}

class { 'Cinder::Scheduler' :
  enabled          => true,
  manage_service   => true,
  package_ensure   => 'installed',
  scheduler_driver => '<SERVICE DEFAULT>',
}

class { 'Cinder::Volume::Rbd' :
  extra_options                    => {  },
  rbd_ceph_conf                    => '/etc/ceph/ceph.conf',
  rbd_flatten_volume_from_snapshot => false,
  rbd_max_clone_depth              => '5',
  rbd_pool                         => 'volumes',
  rbd_secret_uuid                  => 'a5d0dd94-57c4-ae55-ffe0-7e3732a24455',
  rbd_user                         => 'volumes',
  volume_tmp_dir                   => false,
}

class { 'Cinder::Volume' :
  enabled        => true,
  manage_service => true,
  package_ensure => 'installed',
}

class { 'Cinder' :
  amqp_durable_queues                => false,
  api_paste_config                   => '/etc/cinder/api-paste.ini',
  ca_file                            => '<SERVICE DEFAULT>',
  cert_file                          => false,
  control_exchange                   => 'cinder',
  database_connection                => 'mysql://cinder:trj609V8@192.168.0.7/cinder?charset=utf8&read_timeout=60',
  database_idle_timeout              => '3600',
  database_max_overflow              => '20',
  database_max_pool_size             => '20',
  database_max_retries               => '-1',
  debug                              => false,
  default_availability_zone          => false,
  enable_v1_api                      => true,
  enable_v2_api                      => true,
  key_file                           => false,
  kombu_ssl_ca_certs                 => '<SERVICE DEFAULT>',
  kombu_ssl_certfile                 => '<SERVICE DEFAULT>',
  kombu_ssl_keyfile                  => '<SERVICE DEFAULT>',
  kombu_ssl_version                  => '<SERVICE DEFAULT>',
  lock_path                          => '/var/lib/cinder/tmp',
  log_dir                            => '<SERVICE DEFAULT>',
  log_facility                       => 'LOG_LOCAL3',
  package_ensure                     => 'installed',
  qpid_heartbeat                     => '60',
  qpid_hostname                      => 'localhost',
  qpid_password                      => false,
  qpid_port                          => '5672',
  qpid_protocol                      => 'tcp',
  qpid_reconnect                     => true,
  qpid_reconnect_interval            => '0',
  qpid_reconnect_interval_max        => '0',
  qpid_reconnect_interval_min        => '0',
  qpid_reconnect_limit               => '0',
  qpid_reconnect_timeout             => '0',
  qpid_sasl_mechanisms               => false,
  qpid_tcp_nodelay                   => true,
  qpid_username                      => 'guest',
  rabbit_heartbeat_rate              => '2',
  rabbit_heartbeat_timeout_threshold => '0',
  rabbit_host                        => '127.0.0.1',
  rabbit_hosts                       => [ '192.168.0.8:5673', ' 192.168.0.3:5673' ],
  rabbit_password                    => '1GXPbTgb',
  rabbit_port                        => '5672',
  rabbit_use_ssl                     => false,
  rabbit_userid                      => 'nova',
  rabbit_virtual_host                => '/',
  rpc_backend                        => 'cinder.openstack.common.rpc.impl_kombu',
  storage_availability_zone          => 'nova',
  use_ssl                            => false,
  use_stderr                         => false,
  use_syslog                         => true,
  verbose                            => true,
}

class { 'Mysql::Bindings::Python' :
}

class { 'Mysql::Bindings' :
}

class { 'Mysql::Params' :
}

class { 'Mysql::Python' :
  package_ensure => 'present',
  package_name   => 'MySQL-python',
}

class { 'Openstack::Cinder' :
  amqp_hosts           => '192.168.0.8:5673, 192.168.0.3:5673',
  amqp_password        => '1GXPbTgb',
  amqp_user            => 'nova',
  auth_uri             => 'http://192.168.0.7:5000/',
  bind_host            => '192.168.0.8',
  ceilometer           => true,
  cinder_rate_limits   => { 'DELETE' => '100000', 'GET' => '100000', 'POST' => '100000', 'POST_SERVERS' => '100000', 'PUT' => '100000' },
  cinder_user_password => 'sJRfG0GP',
  debug                => false,
  default_log_levels   => { 'amqp' => 'WARN', 'amqplib' => 'WARN', 'boto' => 'WARN', 'iso8601' => 'WARN', 'keystonemiddleware' => 'WARN', 'oslo.messaging' => 'INFO', 'oslo_messaging' => 'INFO', 'qpid' => 'WARN', 'requests.packages.urllib3.connectionpool' => 'WARN', 'requests.packages.urllib3.util.retry' => 'WARN', 'routes.middleware' => 'WARN', 'sqlalchemy' => 'WARN', 'stevedore' => 'WARN', 'suds' => 'INFO', 'taskflow' => 'WARN', 'urllib3.connectionpool' => 'WARN', 'urllib3.util.retry' => 'WARN', 'websocket' => 'WARN' },
  enable_volumes       => true,
  enabled              => true,
  glance_api_servers   => '192.168.0.7:9292',
  identity_uri         => 'http://192.168.0.7:5000/',
  idle_timeout         => '3600',
  iscsi_bind_host      => '192.168.1.8',
  iser                 => false,
  keystone_enabled     => true,
  keystone_tenant      => 'services',
  keystone_user        => 'cinder',
  manage_volumes       => 'ceph',
  max_overflow         => '20',
  max_pool_size        => '20',
  max_retries          => '-1',
  primary_controller   => true,
  privileged_auth_uri  => 'http://192.168.0.7:5000/v2.0/',
  purge_cinder_config  => true,
  queue_provider       => 'rabbitmq',
  rabbit_ha_queues     => true,
  rbd_pool             => 'volumes',
  rbd_secret_uuid      => 'a5d0dd94-57c4-ae55-ffe0-7e3732a24455',
  rbd_user             => 'volumes',
  region               => 'RegionOne',
  service_workers      => '4',
  sql_connection       => 'mysql://cinder:trj609V8@192.168.0.7/cinder?charset=utf8&read_timeout=60',
  syslog_log_facility  => 'LOG_LOCAL3',
  use_stderr           => false,
  use_syslog           => true,
  verbose              => true,
  vmware_host_ip       => '10.10.10.10',
  vmware_host_password => 'password',
  vmware_host_username => 'administrator@vsphere.local',
  volume_group         => 'cinder',
}

exec { 'cinder-manage db_sync' :
  command     => 'cinder-manage db sync',
  logoutput   => 'on_failure',
  notify      => [ 'Service[cinder-api]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]', 'Service[cinder-scheduler]', 'Service[cinder-volume]', 'Service[cinder-backup]' ],
  path        => '/usr/bin',
  refreshonly => true,
  user        => 'cinder',
}

file { '/etc/sysconfig/openstack-cinder-volume' :
  ensure => 'present',
}

file_line { 'set initscript env' :
  line   => 'export CEPH_ARGS="--id volumes"',
  match  => '^export CEPH_ARGS=',
  notify => Service[cinder-volume],
  path   => '/etc/sysconfig/openstack-cinder-volume',
}

package { 'cinder' :
  ensure  => 'installed',
  name    => 'openstack-cinder',
  notify  => 'Exec[cinder-manage db_sync]',
  require => Anchor[cinder-start],
  tag     => [ 'openstack', 'cinder-package' ],
}

package { 'python-mysqldb' :
  ensure => 'present',
  name   => 'MySQL-python',
}

service { 'cinder-api' :
  ensure    => 'running',
  enable    => true,
  hasstatus => true,
  name      => 'openstack-cinder-api',
  require   => Package[cinder],
  tag       => 'cinder-service',
}

service { 'cinder-backup' :
  ensure    => 'running',
  enable    => true,
  hasstatus => true,
  name      => 'openstack-cinder-backup',
  require   => Package[cinder],
  tag       => 'cinder-service',
}

service { 'cinder-scheduler' :
  ensure    => 'running',
  enable    => true,
  hasstatus => true,
  name      => 'openstack-cinder-scheduler',
  require   => Package[cinder],
  tag       => 'cinder-service',
}

service { 'cinder-volume' :
  ensure    => 'running',
  enable    => true,
  hasstatus => true,
  name      => 'openstack-cinder-volume',
  require   => Package[cinder],
  tag       => 'cinder-service',
}

stage { 'main' :
}

